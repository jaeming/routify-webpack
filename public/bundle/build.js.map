{"version":3,"file":"bundle/build.js","mappings":";;;;;;;;;;;;;;;;AAEA,iEAAe;AACf,YAAY;AACZ;AACA,cAAc;AACd,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,gBAAgB,uEAAe;AAC/B;AACA;AACA,gBAAgB;AAChB;AACA,kBAAkB;AAClB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,2BAA2B,qLAAsC;AACjE;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA,kBAAkB;AAClB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,2BAA2B,kLAAqC;AAChE;AACA,KAAK;AACL;AACA,gBAAgB;AAChB;AACA,kBAAkB;AAClB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,2BAA2B,qLAAsC;AACjE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP,kBAAkB;AAClB,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,2BAA2B,wMAAsC;AACjE;AACA;AACA;AACA;;;;;;;;;;;;;;ACrFA,eAAe,kCAAkC;AAC1C;AACP,eAAe,0BAA0B;AACzC;;AAEA,eAAe,sBAAsB;AACrC;;AAEA,eAAe,QAAQ;AACvB;;AAEA;AACA,eAAe,QAAQ;AACvB,eAAe,yBAAyB;AACxC,eAAe,cAAc;AAC7B;AACA;AACA,mBAAmB,cAAc;AACjC;AACA;;AAEA;AACA;AACA,kDAAkD,mBAAmB;AACrE,gDAAgD,mBAAmB;AACnE;;AAEA,gBAAgB,8CAA8C;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA,gCAAgC,8CAA8C;AAC9E;AACA;AACA;AACA;AACA;;AAEA,eAAe,gDAAgD;AAC/D;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,YAAY;AAC5B;AACA;AACA;;AAEA,eAAe,gDAAgD;AAC/D;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,8CAA8C;AAC7D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,eAAe,4BAA4B;AAC3C;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;AACA;AACA;;AAEA,eAAe,wBAAwB;AACvC;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,sCAAsC,oCAAoC;AAC1E;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,MAAM;AACrB;AACA;AACA;AACA;AACA,iBAAiB,wCAAwC;AACzD;AACA;;AAEA,mBAAmB,8CAA8C;AACjE;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kCAAkC,4CAA4C,iBAAiB,SAAS;;AAExG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,MAAM;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,uBAAuB;AACvB;AACA,oCAAoC,sBAAsB,SAAS;AACnE;AACA;AACA;AACA;AACA,gDAAgD,SAAS;AACzD;AACA;AACA;AACA,cAAc;AACd;AACA,oDAAoD,4CAA4C;AAChG;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,KAAK,SAAS,UAAU;AACpF;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA,iBAAiB;AACjB,UAAU;;AAEV;AACA;AACA;AACA,oBAAoB;AACpB;AACA,SAAS;;AAET;AACA;;AAEA,kBAAkB,8CAA8C;AAChE;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACjSoE;AAClC;;AAElC;AACA,cAAc,mBAAmB;AACjC;AACO;AACP,eAAe,mBAAmB;AAClC;;AAEA,eAAe,8BAA8B;AAC7C;;AAEA,eAAe,gCAAgC;AAC/C;;AAEA,eAAe,8CAA8C;AAC7D;;AAEA,gBAAgB,6EAAa;;AAE7B;AACA,eAAe,SAAS;AACxB,eAAe,aAAa;AAC5B,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC7BA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,iBAAiB;AAC5B,aAAa;AACb;AACO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;;AAEA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,sCAAsC;AACjD,aAAa;AACb;AACO;AACP,4BAA4B,cAAc;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB,aAAa;AACb;AACO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACjEA;AACA,kBAAkB;AAClB,kBAAkB;AAClB,WAAW,GAAG;AACd,YAAY,OAAO;AACnB,YAAY,eAAe;AAC3B;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,KAAK;AACpB,iBAAiB;AACjB;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,WAAW,0BAA0B;AACrC,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,WAAW,0BAA0B;AACrC,aAAa;AACb;AACO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,+CAA+C,QAAQ,GAAG;AAC1D,gEAAgE,KAAK,IAAI,QAAQ;AACjF,yDAAyD,IAAI;AAC7D;AACA;AACA,uDAAuD;AACvD;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,iCAAiC;AAC/C,WAAW,GAAG;AACd,WAAW,sBAAsB;AACjC;AACA;AACA;AACA,gBAAgB;AAChB,gBAAgB,cAAc;AAC9B,gBAAgB,QAAQ,aAAa;AACrC,MAAM;AACN,IAAI;AACJ;AACO;AACP;AACA,qBAAqB,2CAA2C;;AAEhE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA,mDAAmD,mBAAmB;AACtE,cAAc,qDAAqD;AACnE,WAAW,WAAW;AACtB,WAAW,qBAAqB;AAChC,aAAa;AACb;AACO;AACP;AACA;AACA;AACA,0BAA0B;AAC1B;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA,8BAA8B,qBAAqB,8BAA8B;AACjF;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,oCAAoC;AAClD;AACA,WAAW,GAAG;AACd,WAAW,2BAA2B;AACtC,WAAW,UAAU;AACrB,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,UAAU;AACtE;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;;;;;;;;;;;;;;;AC7NL,cAAc,gBAAgB;AACvB;AACP,2CAA2C;;AAE3C;AACA;AACA;AACA,8CAA8C,YAAY;AAC1D,wCAAwC,UAAU,GAAG,SAAS,GAAG,UAAU;;AAE3E;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uCAAuC,OAAO;AAC9C;AACA;AACA;;;;;;;;;;;;;;;;;;ACf0B;AACgC;;AAEnD;AACP,eAAe,kBAAkB;AACjC;;AAEA;AACA;;AAEA,mBAAmB,iEAAgB;AACnC;;AAEA,eAAe,UAAU;AACzB;AACA;AACA;;AAEA,qBAAqB,wEAAoB;;AAEzC,gBAAgB,QAAQ;AACxB;AACA;AACA,YAAY,yDAAY;AACxB,mBAAmB,6DAAY;AAC/B;AACA;AACA,cAAc,+DAAc;AAC5B;;AAEA,4CAA4C,+DAAc;AAC1D;;AAEA;AACA;AACA;AACA;AACA;;AAEO;;;;;;;;;;;;;;;;;;AC3CsC;AACb;AACoB;;AAEpD;AACA,aAAa;AACb;AACO,2BAA2B,mDAAK;AACvC,eAAe,kBAAkB;AACjC;;AAEA;AACA,eAAe,QAAQ;AACvB,eAAe,kBAAkB;AACjC,eAAe,gBAAgB;AAC/B,eAAe,mBAAmB;AAClC;AACA;AACA;;AAEA,mBAAmB,kBAAkB;AACrC;;AAEA,mBAAmB,kBAAkB;AACrC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,uDAAuD;AACzE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oDAAI,GAAG,YAAY;AAC1C;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB;AACA;AACA;;AAEA;AACA;AACA,oBAAoB,4BAA4B;AAChD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACrGgD;AACI;AACH;;AAEjD;AACA,aAAa;AACb;AACO,6BAA6B,uDAAO;AAC3C,sBAAsB,0DAAY;AAClC;;AAEA,cAAc,UAAU;AACxB;;AAEA,eAAe,8BAA8B;AAC7C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,sEAAuB;AAC7C,iDAAiD,mBAAmB;AACpE;AACA;AACA;;;;;;;;;;;;;;;AC9BA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,iBAAiB;AACjB;AACA;;AAEA;AACA,iDAAiD;AACjD,eAAe,UAAU;AACzB,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,IAAI;;AAEb;AACA;AACA;AACA;AACA,iCAAiC,uBAAuB;AACxD,iCAAiC,uBAAuB;AACxD;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClDkD;;AAElD,WAAW,YAAY;AACvB;;AAEO;AACP,eAAe,iBAAiB;AAChC;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA,eAAe,SAAS,aAAa,GAAG;AACxC;;AAEA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB,eAAe,UAAU;AACzB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iCAAiC,WAAW,UAAU;AACtD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA,gBAAgB,SAAS;AACzB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iCAAiC;AAC/D;AACA,kBAAkB;AAClB;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,sBAAsB,aAAa;AACnC,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,6CAA6C,SAAS;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uDAAuD,aAAa;AACpE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,sBAAsB,4DAAa;AACnC;AACA;AACA;AACA;;;;;;;;;;;;;;;;AChL4C;;AAErC;AACP;AACA,eAAe,OAAO;AACtB,eAAe,cAAc;AAC7B,eAAe,QAAQ;AACvB,eAAe,qBAAqB;AACpC;AACA;AACA;AACA;AACA,mBAAmB,4BAA4B;AAC/C;AACA;AACA;;AAEA,+CAA+C,mBAAmB;AAClE;;AAEA;AACA,cAAc;AACd;AACA;;AAEA;AACA,eAAe,0DAAe;AAC9B;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AChCO;;AAEP;AACA;AACA,WAAW,iBAAiB;AAC5B,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEO;AACP;;AAEA;AACA,cAAc,iBAAiB;AAC/B,WAAW,GAAG;AACd,aAAa;AACb;AACA;AACA;AACA,qBAAqB,GAAG;AACxB,qBAAqB,GAAG;;AAEjB;AACP;AACA;AACA;AACA;AACA,SAAS;AACT,UAAU;AACV;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AACA,cAAc,SAAS;AACvB,WAAW,QAA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;;;;;;;;;;;ACTsC;AACuC;AAC3C;AACV;;AAExB;AACA;AACA,WAAW,cAAc;AACzB,WAAW,cAAc;AACzB;AACO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,0BAA0B;AACrC,WAAW,MAAM;AACjB,UAAU,gBAAgB;AACnB;AACP;AACA,gBAAgB,SAAS,EAAE,qDAAQ;AACnC,eAAe,qDAAO;AACtB;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA,aAAa,oCAAoC;AACjD;;AAEA;AACA,aAAa,QAAQ;AACrB,UAAU,SAAS;AACnB;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,0BAA0B;AACrC,aAAa;AACb;AACA,UAAU;AACV;AACO;AACP;AACA,gBAAgB,SAAS,EAAE,qDAAQ;AACnC,mCAAmC,mEAAsB;AACzD,eAAe,qDAAO;AACtB;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oCAAoC,4DAAW;AAC/C;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEA;AACA;AACA,WAAW,cAAc;AACzB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA,UAAU;AACV;AACO;AACP;AACA,QAAQ,qDAAO,CAAC,mEAAsB;AACtC;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,wBAAwB;AACnC,WAAW,iBAAiB;AAC5B,aAAa;AACb;AACA,UAAU,oBAAoB;AACvB;AACP;AACA,QAAQ,qDAAO,CAAC,wEAA2B;AAC3C;;AAEA;AACA,WAAW,OAAO;AAClB;AACO;;AAEA,2CAA2C;AAClD;;AAEA;AACA;AACA;;AAEA,eAAe,UAAU;AACzB,6BAA6B,cAAc;AAC3C,gBAAgB,YAAY,IAAI;;AAEhC;AACA;AA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A;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C,cAAc;AACzD;AACA;AACA;AACA;AACA,2CAA2C,cAAc;AACzD;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,sCAAsC;AACjD,WAAW,UAAU;AACrB,WAAW,SAAS;AACpB,aAAa;AACb;AACO,6CAA6C;AACpD;AACA,8BAA8B,IAAI;AAClC,oCAAoC,IAAI;AACxC;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB;AACO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA,KAAK,IAAI;AACT;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,mCAAmC;AAC9C,WAAW,OAAO;AAClB;AACA;AACO;AACP,eAAe,yBAAyB;AACxC;AACA;AACA,6CAA6C,MAAM,SAAS,MAAM;AAClE;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEO;AACP,QAAQ,wBAAwB;;AAEhC;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;;AAEO;AACP,eAAe,QAAQ;AACvB;AACA,eAAe,kDAAU;AACzB,KAAK;AACL,eAAe,iBAAiB;AAChC;AACA,eAAe,kDAAU;AACzB,KAAK;AACL;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACO;AACP;AACA,eAAe,kDAAU;AACzB,MAAM;AACN;;AAEA;AACA;AACA,aAAa,sCAAsC,aAAa;AAChE;;AAEA;AACA;AACA;AACA,YAAY,GAAG;AACf,YAAY,8CAA8C;AAC1D,aAAa;AACb;AACO;AACP,kBAAkB,sDAAQ;AAC1B,kCAAkC,WAAW,iDAAG,SAAS;AACzD;;AAEA;AACA;AACA,YAAY,UAAU;AACtB;AACA;AACO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY,QAAQ;AACpB,aAAa;AACb;AACO;AACP;;;;;;;;;;;;;;;;;;;AC3NwC;AACxC,YAAY,uDAAY;;AAEjB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;AAEO;AACP;AACA;AACA;AACA,iBAAiB;AACjB,MAAM;AACN,2EAA2E;AAC3E;AACA;;AAEO;AACP,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA,MAAM,iEAAiE,eAAe;AACtF;;AAEA;AACA,cAAc,UAAU;AACxB,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA,yBAAyB,gBAAgB;AACzC;AACA;;;;;;;;;;;;;;;;AC9CA;AACA;AACA,WAAW,UAAU;AACrB;;AAEA;AACA,aAAa,QAAQ;AACrB,UAAU,cAAc;AACxB,UAAU,cAAc;AACxB,UAAU,cAAc;AACxB,UAAU,yBAAyB;AACnC,UAAU,QAAQ;AAClB,UAAU,sBAAsB;AAChC,UAAU,QAAQ;AAClB,UAAU,QAAQ;AAClB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA,kDAAkD;AAClD;;AAEO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW,QAAQ;AACnB;;AAEA,cAAc,qBAAqB;;AAEnC;AACA,WAAW,qBAAqB;AAChC,aAAa;AACb;AACO;;;;;;;;;;;;;;;;;;;ACjIP;AACA;AACA;AACA,WAAW,GAAG;AACd,aAAa,UAAU;AACvB;;AAEqC;;AAErC;AACA;AACA,aAAa,kDAAkD;AAC/D;;AAEA;AACA;AACA,aAAa,QAAQ;AACrB,UAAU,GAAG;AACb,UAAU,GAAG;AACb,UAAU,KAAK;AACf;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,QAAQ;AACnB;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,aAAa;AAC1B;;AAEA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,4BAA4B,kDAAO;;AAEnC;AACA;;AAEA;AACA;AACA,aAAa,uCAAuC;AACpD;AACA;AACA;AACA,aAAa,kDAAkD;AAC/D;AACA;AACA;AACA,aAAa,4CAA4C;AACzD;AACA;AACA;AACA,aAAa,wDAAwD;AACrE;;AAEA;AACA;AACA,WAAW,IAAI;AACf,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,IAAI;AACf,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,IAAI;AACf,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,IAAI;AACf,aAAa;AACb;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACrJA;AACA,cAAc,UAAU;AACxB,WAAW,IAAI;AACf,aAAa;AACb;AACO;AACP;;AAEA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,IAAI;AACxB;;;;;;;;;;;;;;;;AChBA;;AAEuD;;AAEvD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEO;AACP,kCAAkC,yBAAyB;AAC3D;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;;AAEA;;AAEA;AACA;AACA,IAAI,sDAAW;AACf;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,uBAAuB,wDAAa;AACpC;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,cAAc,UAAU;;AAExB;AACA;AACA,cAAc,iCAAiC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,UAAU,wDAAa;AACvB;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,GAAG;AAC1E;;AAEA;AACA;;;;;;;;;;;;;;;;AC3K2C;;;;;;;;;;;;;;;ACA3C;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;;AAEA;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,wBAAwB,gBAAgB;AACxC;AACA;AACA,OAAO;AACP;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;;AAEA;AACA,sBAAsB,SAAS;AAC/B;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,YAAY;;;;;;;;;;;;;;;;;;ACpI3B;AACiD;AACjD;AACA;AACA,gCAAgC;AAChC;AACA,qBAAqB,6DAA+B,IAAI,mDAAqB;AAC7E;AACA;AACA;AACA;AACA;;AAEuC;;AAEvC;;AAEO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uDAAY;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,WAAW;AAC7B,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,WAAW;AAC7B,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iEAAe,OAAO;;;;;;;;;;;;;;;;;ACxGtB;AACA;AACA;AACA;AACA;AACA;;AAE0D;;AAE1D;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,+BAA+B,oBAAoB;;AAEnD,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,yBAAyB;AAC7C;AACA,KAAK;AACL,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA,qDAAqD,UAAU;AAC/D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,YAAY,uBAAuB;;AAEnC;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,MAAM,yEAAsB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,MAAM;AACN,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEO;;AAEP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,UAAU;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,aAAa;AACb;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,UAAU;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ;AACR,uCAAuC,UAAU;AACjD;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,WAAW;AACX;;;;;;;;;;;;;;;;AC1aA;AACA;AACA;AACA;AACA;AACA;AAKwB;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,8BAA8B;AACxC,IAAI;;AAEJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,sEAAqB;AAChC,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,8DAAiB;AAC9B,MAAM;AACN;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA,MAAM,uEAAqB;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,c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A;AACA;AACA;AACA;AACO,iBAAiB,gEAAY;AACpC,SAAS,sCAAsC;AAC/C,SAAS,YAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtGkO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,KAAK;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,yBAAyB;AACxD,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,qBAAqB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,qBAAqB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C;AACA,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA,WAAW,WAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,mBAAmB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,IAAI;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC,qBAAqB,4CAA4C;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,kBAAkB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,QAAQ;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4BAA4B;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,2BAA2B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA,oBAAoB,2BAA2B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,oBAAoB,QAAQ,SAAS,aAAa,cAAc;AAClH,2BAA2B,WAAW,YAAY,sBAAsB,YAAY;AACpF;AACA;AACA;AACA;AACA;AACA,iEAAiE,0BAA0B;AAC3F;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,sCAAsC,IAAI;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,oBAAoB,QAAQ;AAC5B;AACA,kCAAkC,EAAE,cAAc;AAClD;AACA,oCAAoC,EAAE,cAAc,GAAG;AACvD,6BAA6B,WAAW,GAAG,IAAI;AAC/C;AACA,YAAY,oBAAoB;AAChC;AACA;AACA,4CAA4C,MAAM,EAAE,KAAK;AACzD;AACA;AACA,8BAA8B,eAAe,UAAU,SAAS,EAAE,MAAM,EAAE,SAAS,YAAY,MAAM;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,aAAa;AACjC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,oDAAoD,aAAa,UAAU;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAgB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,WAAW,YAAY,gBAAgB,MAAM,cAAc;AAC7F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qBAAqB,IAAI;AACrD;AACA;AACA;AACA;AACA,uDAAuD,YAAY;AACnE;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,6BAA6B;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,uCAAuC,8BAA8B,EAAE,KAAK;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iEAAiE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iEAAiE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,iEAAiE;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,qBAAM;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qDAAqD,KAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,OAAO,GAAG,OAAO;AACrX;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,KAAK,IAAI,MAAM;AACtC;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,yBAAyB,SAAS;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,kBAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,IAAI;AAChC,4BAA4B,KAAK;AACjC;AACA;AACA;AACA;AACA,kBAAkB,QAAQ,EAAE,uBAAuB,GAAG,KAAK,GAAG,OAAO,KAAK;AAC1E,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,IAAI;AACpC;AACA;AACA;AACA;AACA;AACA,2BAA2B,IAAI,YAAY,wBAAwB,IAAI;AACvE;AACA,6BAA6B;AAC7B,mDAAmD;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,oBAAoB;AACnF,eAAe,KAAK,EAAE,WAAW;AACjC;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA,uBAAuB,IAAI,IAAI,mBAAmB;AAClD;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+CAA+C;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C;AACA;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,8DAA8D,mBAAmB,aAAa,eAAe;AAC7G;AACA;AACA,sCAAsC,cAAc;AACpD;AACA;AACA;AACA,sCAAsC,cAAc;AACpD;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA,sCAAsC,sBAAsB;AAC5D;AACA;AACA;AACA,sCAAsC,MAAM;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,iCAAiC;AACjF;AACA;AACA,uDAAuD,iCAAiC;AACxF;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,iBAAiB;AACpE;AACA,gDAAgD,wBAAwB;AACxE;AACA;AACA;AACA,2CAA2C,uBAAuB;AAClE;AACA;AACA;AACA,0CAA0C,uBAAuB;AACjE;AACA;AACA;AACA;AACA;AACA,uCAAuC,kBAAkB;AACzD;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,KAAK,iCAAiC,SAAS;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,IAAI;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,uBAAuB;AACnC,0DAA0D,YAAY;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,cAAc;AAC3B;AACA,qBAAqB,OAAO;AAC5B;AACA;AACA;AACA;AACA;AACA,6DAA6D,YAAY;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEoqF;;;;;;;;;;;;;;;;;;;ACjnEtkF;AAC/B;;AAE/D;AACA;AACA;AACA;AACA,WAAW,kBAAkB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,mBAAmB;AAC9B;AACA,iCAAiC,qDAAI;AACrC;AACA;AACA;AACA,YAAY,mEAAc;AAC1B;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,6BAA6B;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,qDAAI;AAC7C;AACA;AACA;AACA,iCAAiC,qDAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qDAAI;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,gEAAW,oBAAoB,qDAAI;AAC7D;AACA;AACA,6DAA6D,8DAAS;AACtE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,YAAY,4DAAO;AACnB;AACA;AACA,KAAK;AACL;;AAEuC;;;;;;;;;;;;;;;;ACtGR;;AAExB;AACP,MAAM,mDAAG;AACT;AACA,GAAG;AACH;;AAEA,IAAI,KAAqB,EAAE,EAE1B;;;;;;;UCVD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;UACA,sBAAsB;UACtB,oDAAoD,uBAAuB;UAC3E;UACA;UACA,GAAG;UACH;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;;UAEA;UACA;;;;;WC3CA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA;;;;;WCJA;WACA;WACA;WACA;WACA;;;;;WCJA;;;;;WCAA;;;;;WCAA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA;;;;;WCVA;;;;;WCAA;WACA;WACA;WACA;WACA,uBAAuB,4BAA4B;WACnD;WACA;WACA;WACA,iBAAiB,oBAAoB;WACrC;WACA,mGAAmG,YAAY;WAC/G;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,mEAAmE,iCAAiC;WACpG;WACA;WACA;WACA;;;;;WCzCA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;;WAEA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,CAAC;;WAED;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA,2BAA2B;WAC3B,4BAA4B;WAC5B,2BAA2B;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;;WAEH;WACA;WACA;WACA;WACA;WACA;WACA,oBAAoB,gBAAgB;WACpC;WACA;WACA;WACA,KAAK;WACL;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA,oBAAoB,gBAAgB;WACpC;WACA;WACA,GAAG;WACH;WACA;WACA,GAAG;WACH;WACA;WACA,GAAG;WACH;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;;WAEH;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,GAAG;WACH;WACA;WACA;WACA,GAAG;;WAEH;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;WAEA,iBAAiB,qCAAqC;WACtD;;WAEA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA,oBAAoB,iBAAiB;WACrC;WACA;WACA;WACA,GAAG;WACH;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH,EAAE;WACF;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;WACA;WACA;WACA,QAAQ;WACR;WACA;WACA,QAAQ;WACR;WACA,MAAM;WACN,KAAK;WACL,IAAI;WACJ,GAAG;WACH;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;;WAEA;WACA;;WAEA;;WAEA;WACA;WACA,EAAE;WACF;;WAEA;WACA;WACA;WACA,GAAG;WACH;;WAEA;WACA;WACA;WACA,GAAG;WACH;;WAEA;WACA;;WAEA;WACA;WACA,EAAE;;WAEF;WACA;;WAEA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA,oBAAoB,oBAAoB;WACxC;WACA;WACA;WACA;WACA,EAAE;;WAEF;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;;WAEA;WACA;WACA;WACA;WACA,KAAK;WACL;WACA,IAAI;WACJ;;WAEA;WACA;WACA,GAAG;WACH,EAAE;WACF;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ,GAAG;WACH;WACA;WACA;WACA;;;;;WCrYA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WCfA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA,gBAAgB,6BAA6B;WAC7C;WACA;WACA;WACA;WACA;WACA,gBAAgB,8BAA8B;WAC9C;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;WACA;;WAEA;WACA;WACA;WACA,UAAU;WACV,iBAAiB,oBAAoB;WACrC;WACA;WACA;WACA;WACA,EAAE;WACF,iBAAiB,oBAAoB;WACrC;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;WACA,GAAG;WACH,EAAE;WACF;;;;;WClFA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA,iCAAiC;;WAEjC;WACA;WACA;WACA,KAAK;WACL,eAAe;WACf;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,mBAAmB,2BAA2B;WAC9C;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,KAAK;WACL;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA,kBAAkB,cAAc;WAChC;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA,cAAc,MAAM;WACpB;WACA;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA,cAAc,aAAa;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA,iBAAiB,4BAA4B;WAC7C;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;;WAEA;;WAEA;WACA;WACA;WACA;WACA,IAAI;WACJ;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;WACA;WACA,gBAAgB,4BAA4B;WAC5C;WACA;WACA;;WAEA;WACA;;WAEA;WACA;;WAEA;WACA;;WAEA;WACA,gBAAgB,4BAA4B;WAC5C;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,kBAAkB,uCAAuC;WACzD;WACA;WACA;WACA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA,mBAAmB,iCAAiC;WACpD;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,sBAAsB,uCAAuC;WAC7D;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,sBAAsB,sBAAsB;WAC5C;WACA;WACA,SAAS;WACT;WACA;WACA;WACA;WACA;WACA,WAAW;WACX,WAAW;WACX;WACA;WACA;WACA;WACA;WACA;WACA;WACA,YAAY;WACZ;WACA;WACA;WACA;WACA;WACA;WACA,UAAU;WACV;WACA;WACA;WACA;WACA;WACA;WACA,WAAW;WACX;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA,mBAAmB,wCAAwC;WAC3D;WACA;WACA;WACA;WACA,MAAM;WACN;WACA;WACA;WACA;WACA;WACA,QAAQ;WACR,QAAQ;WACR;WACA;WACA;WACA;WACA;WACA;WACA,SAAS;WACT;WACA;WACA;WACA;WACA;WACA;WACA,OAAO;WACP;WACA;WACA;WACA;WACA;WACA,QAAQ;WACR;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE,IAAI;WACN;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,IAAI;WACJ;WACA;WACA,EAAE;WACF;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA,sCAAsC;WACtC;WACA;WACA,EAAE;WACF;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;WACA;WACA;;;;;UE9jBA;UACA;UACA;UACA","sources":["webpack://wp5-starter-svelte/./.routify/routes.default.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/common/RNode.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/common/Routify.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/common/helpers.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/common/utils.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/runtime/Global/BrowserAdapter.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/runtime/Global/Global.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/runtime/Instance/RNodeRuntime.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/runtime/Instance/RoutifyRuntime.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/runtime/Instance/UrlParamUtils.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/runtime/Route/Route.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/runtime/Route/RouteFragment.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/runtime/Route/utils.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/runtime/Router/Router.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/runtime/Router/urlReflectors/Address.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/runtime/Router/urlReflectors/Internal.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/runtime/Router/urlReflectors/LocalStorage.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/runtime/Router/urlReflectors/ReflectorBase.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/runtime/helpers/index.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/runtime/helpers/scroll.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/runtime/index.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/runtime/plugins/reset/index.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/runtime/renderer/utils/normalizeMulti.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/runtime/utils/index.js","webpack://wp5-starter-svelte/./node_modules/@roxi/routify/lib/runtime/utils/logger.js","webpack://wp5-starter-svelte/./node_modules/consolite/esm/index.mjs","webpack://wp5-starter-svelte/./node_modules/hookar/esm/index.mjs","webpack://wp5-starter-svelte/./node_modules/hookar/esm/util.mjs","webpack://wp5-starter-svelte/./node_modules/svelte-hmr/runtime/hot-api.js","webpack://wp5-starter-svelte/./node_modules/svelte-hmr/runtime/index.js","webpack://wp5-starter-svelte/./node_modules/svelte-hmr/runtime/overlay.js","webpack://wp5-starter-svelte/./node_modules/svelte-hmr/runtime/proxy-adapter-dom.js","webpack://wp5-starter-svelte/./node_modules/svelte-hmr/runtime/proxy.js","webpack://wp5-starter-svelte/./node_modules/svelte-hmr/runtime/svelte-hooks.js","webpack://wp5-starter-svelte/Node.svelte","webpack://wp5-starter-svelte/Router.svelte","webpack://wp5-starter-svelte/Noop.svelte","webpack://wp5-starter-svelte/ScrollDecorator.svelte","webpack://wp5-starter-svelte/ComposeFragments.svelte","webpack://wp5-starter-svelte/DecoratorWrapper.svelte","webpack://wp5-starter-svelte/RenderFragment.svelte","webpack://wp5-starter-svelte/App.svelte","webpack://wp5-starter-svelte/./node_modules/svelte-loader/lib/hot-api.js","webpack://wp5-starter-svelte/./node_modules/svelte/index.mjs","webpack://wp5-starter-svelte/./node_modules/svelte/internal/index.mjs","webpack://wp5-starter-svelte/./node_modules/svelte/store/index.mjs","webpack://wp5-starter-svelte/./src/main.js","webpack://wp5-starter-svelte/webpack/bootstrap","webpack://wp5-starter-svelte/webpack/runtime/define property getters","webpack://wp5-starter-svelte/webpack/runtime/ensure chunk","webpack://wp5-starter-svelte/webpack/runtime/get javascript chunk filename","webpack://wp5-starter-svelte/webpack/runtime/get javascript update chunk filename","webpack://wp5-starter-svelte/webpack/runtime/get mini-css chunk filename","webpack://wp5-starter-svelte/webpack/runtime/get update manifest filename","webpack://wp5-starter-svelte/webpack/runtime/getFullHash","webpack://wp5-starter-svelte/webpack/runtime/global","webpack://wp5-starter-svelte/webpack/runtime/harmony module decorator","webpack://wp5-starter-svelte/webpack/runtime/hasOwnProperty shorthand","webpack://wp5-starter-svelte/webpack/runtime/load script","webpack://wp5-starter-svelte/webpack/runtime/make namespace object","webpack://wp5-starter-svelte/webpack/runtime/hot module replacement","webpack://wp5-starter-svelte/webpack/runtime/publicPath","webpack://wp5-starter-svelte/webpack/runtime/css loading","webpack://wp5-starter-svelte/webpack/runtime/jsonp chunk loading","webpack://wp5-starter-svelte/webpack/before-startup","webpack://wp5-starter-svelte/webpack/startup","webpack://wp5-starter-svelte/webpack/after-startup"],"sourcesContent":["\n\nexport default {\n  \"meta\": {},\n  \"id\": \"_default\",\n  \"_regex\": {},\n  \"_paramKeys\": {},\n  \"module\": false,\n  \"file\": {\n    \"path\": \"src/routes\",\n    \"dir\": \"src\",\n    \"base\": \"routes\",\n    \"ext\": \"\",\n    \"name\": \"routes\"\n  },\n  \"rootName\": \"default\",\n  \"routifyDir\": import.meta.url,\n  \"children\": [\n    {\n      \"meta\": {},\n      \"id\": \"_default_index_svelte\",\n      \"_regex\": {},\n      \"_paramKeys\": {},\n      \"name\": \"index\",\n      \"file\": {\n        \"path\": \"src/routes/index.svelte\",\n        \"dir\": \"src/routes\",\n        \"base\": \"index.svelte\",\n        \"ext\": \".svelte\",\n        \"name\": \"index\"\n      },\n      \"asyncModule\": () => import('./../src/routes/index.svelte'),\n      \"children\": []\n    },\n    {\n      \"meta\": {},\n      \"id\": \"_default_more_svelte\",\n      \"_regex\": {},\n      \"_paramKeys\": {},\n      \"name\": \"more\",\n      \"file\": {\n        \"path\": \"src/routes/more.svelte\",\n        \"dir\": \"src/routes\",\n        \"base\": \"more.svelte\",\n        \"ext\": \".svelte\",\n        \"name\": \"more\"\n      },\n      \"asyncModule\": () => import('./../src/routes/more.svelte'),\n      \"children\": []\n    },\n    {\n      \"meta\": {},\n      \"id\": \"_default_stuff_svelte\",\n      \"_regex\": {},\n      \"_paramKeys\": {},\n      \"name\": \"stuff\",\n      \"file\": {\n        \"path\": \"src/routes/stuff.svelte\",\n        \"dir\": \"src/routes\",\n        \"base\": \"stuff.svelte\",\n        \"ext\": \".svelte\",\n        \"name\": \"stuff\"\n      },\n      \"asyncModule\": () => import('./../src/routes/stuff.svelte'),\n      \"children\": []\n    },\n    {\n      \"meta\": {\n        \"dynamic\": true,\n        \"dynamicSpread\": true\n      },\n      \"_regex\": {},\n      \"_paramKeys\": {},\n      \"name\": \"[...404]\",\n      \"file\": {\n        \"path\": \".routify/components/[...404].svelte\",\n        \"dir\": \".routify/components\",\n        \"base\": \"[...404].svelte\",\n        \"ext\": \".svelte\",\n        \"name\": \"[...404]\"\n      },\n      \"asyncModule\": () => import('./components/[...404].svelte'),\n      \"children\": []\n    }\n  ]\n}","/** @template {import('./Routify').Routify<any>} InstanceType */\nexport class RNode {\n    /** @type {InstanceType['NodeType']} */\n    parent\n\n    /** @type {Object.<string, any>} */\n    meta = {}\n\n    /** @type {String} */\n    id\n\n    /**\n     * @param {string} name\n     * @param {ReservedCmpProps|string} module\n     * @param {InstanceType} instance\n     */\n    constructor(name, module, instance) {\n        /** @type {InstanceType} */\n        this.instance = instance\n        this.name = name\n\n        instance.nodeIndex.push(this)\n        this.module = module\n        Object.defineProperty(this, 'instance', { enumerable: false })\n        Object.defineProperty(this, 'parent', { enumerable: false })\n    }\n\n    /** @param {InstanceType['NodeConstructor']['prototype']} child */\n    appendChild(child) {\n        if (child.instance) child.parent = this\n    }\n\n    /**\n     * Creates a new child node\n     * Same as `node.appendChild(instance.createNode('my-node'))`\n     * @param {string} name\n     */\n    createChild(name, module) {\n        const node = /** @type {InstanceType['NodeConstructor']['prototype']} */ (\n            this.instance.createNode(name, module)\n        )\n        this.appendChild(node)\n        return node\n    }\n\n    /** @type {InstanceType['NodeConstructor']['prototype'][]} */\n    get descendants() {\n        return this.instance.nodeIndex.filter(node =>\n            node.ancestors.find(n => n === this),\n        )\n    }\n\n    remove() {\n        const { nodeIndex } = this.instance\n        const index = nodeIndex.findIndex(node => node === this)\n        nodeIndex.splice(index, 1)\n    }\n\n    /** @type {InstanceType['NodeConstructor']['prototype'][]} */\n    get ancestors() {\n        let node = this\n        const ancestors = []\n        while ((node = node.parent)) ancestors.push(node)\n\n        return ancestors\n    }\n\n    /** @type {InstanceType['NodeConstructor']['prototype']} */\n    get root() {\n        let node = this\n        while (node.parent) node = node.parent\n        return node\n    }\n\n    get isRoot() {\n        return this === this.root\n    }\n\n    /** @type {InstanceType['NodeType'][]} */\n    get children() {\n        return this.instance.nodeIndex.filter(node => node.parent === this)\n    }\n\n    /** @returns {number} */\n    get level() {\n        return (this.parent?.level || 0) + 1\n    }\n\n    /** @type {Object.<string,RegExp>} */\n    _regex = {}\n\n    get regex() {\n        // match against name to make sure regex stays working if name is changed\n        const { name } = this\n        if (!this._regex[name])\n            this._regex[name] = this.instance.utils.getRegexFromName(this.name)\n        return this._regex[name]\n    }\n\n    // save to regex key so regex gets invalidated if name changes\n    set regex(value) {\n        this._regex[this.name] = new RegExp(value)\n    }\n\n    /**\n     * @type {Object.<string, string[]>}\n     * */\n    _paramKeys = {}\n\n    get paramKeys() {\n        // match against name to make sure regex stays working if name is changed\n        const { name } = this\n        if (!this._paramKeys[name])\n            this._paramKeys[name] = this.instance.utils.getFieldsFromName(this.name)\n        return this._paramKeys[name]\n    }\n\n    /**\n     * returns parameters for a given urlFragment\n     * @param {string} urlFragment\n     */\n    getParams(urlFragment) {\n        const values = this.instance.utils.getValuesFromPath(this.regex, urlFragment)\n        return this.instance.utils.mapFieldsWithValues(this.paramKeys, values)\n    }\n\n    // todo traverse should use the getChainTo API interface\n\n    /**\n     * resolve a node relative to this node\n     * @param {string} path\n     * @param {boolean} allowDynamic allow traversing dynamic components (parameterized)\n     * @param {boolean} includeIndex\n     * @param {boolean} silent don't throw errors for 404s\n     * @returns {this}\n     */\n    traverse(path, allowDynamic = false, includeIndex = false, silent = false) {\n        const isNamed = !path.startsWith('/') && !path.startsWith('.')\n        return isNamed\n            ? this.root.instance.nodeIndex.find(node => node.meta.name === path)\n            : this.getChainTo(path, { allowDynamic, includeIndex, silent })?.pop().node\n    }\n\n    /**\n     * Returns an array of steps to reach a path. Each path contains a node and params\n     * @param {string} path\n     * @param {object} [options]\n     * @param {boolean} [options.allowDynamic=true]\n     * @param {boolean} [options.includeIndex=true]\n     * @param {boolean} [options.silent=false] don't throw errors for 404s\n     * @param {this} [options.rootNode]\n     \n     */\n    getChainTo(path, options) {\n        options = {\n            ...{ allowDynamic: true, includeIndex: true },\n            ...options,\n        }\n\n        /** @type {InstanceType['NodeConstructor']['prototype']} */\n        const originNode = path.startsWith('/') ? options.rootNode || this.root : this\n\n        /**\n         * The path from current node to the leaf page, eg. \"blog\", \"posts\", \"some-story\", \"comments\", \"123\"\n         * @type {string[]}\n         * */\n        const stepsToLeaf = path\n            .split('/')\n            .filter(snip => snip !== '.')\n            .filter(Boolean)\n\n        let currentNodeStep = {\n            node: originNode,\n            stepsToLeaf,\n            params: {},\n            fragment: '',\n        }\n        const nodeSteps = [currentNodeStep]\n\n        let inStaticDeadEnd = false // if true, don't look for a static component\n        let inDynamicDeadEnd = false // if true, don't look for a dynamic component\n\n        while (currentNodeStep.stepsToLeaf.length) {\n            const [nextStep, ...restSteps] = currentNodeStep.stepsToLeaf\n            // console.log(`in \"${nodeSteps.map(ns => ns.node.name).join('/')}\" looking for \"${nextStep}\"`)\n\n            const nextNode =\n                nextStep === '..'\n                    ? currentNodeStep.node.parent\n                    : (!inStaticDeadEnd &&\n                          currentNodeStep.node.children.find(\n                              node => node.name === nextStep,\n                          )) ||\n                      (options.allowDynamic &&\n                          !inDynamicDeadEnd &&\n                          currentNodeStep.node.children\n                              .filter(({ meta }) => meta.dynamic && !meta.dynamicSpread)\n                              .find(node => node.regex.test(nextStep))) ||\n                      (options.allowDynamic &&\n                          currentNodeStep.node.children.find(\n                              node => node.meta.dynamicSpread,\n                          ))\n\n            if (nextNode) {\n                // we found a node that matches the next url fragment\n                // console.log(nodeSteps.map(ns => ns.node.name).join('/') + '/' + nextNode.name)\n\n                const nodeStep = {\n                    node: nextNode,\n                    params: nextNode.meta.dynamicSpread\n                        ? [nextStep]\n                        : nextNode.meta.dynamic\n                        ? nextNode.getParams(nextStep)\n                        : {},\n                    stepsToLeaf: restSteps,\n                    fragment: nextStep,\n                }\n                currentNodeStep = nodeStep\n                nodeSteps.push(nodeStep)\n            } else if (!options.allowDynamic && options.silent) return null\n            else if (!options.allowDynamic && !options.silent)\n                throw new Error(\n                    `${nodeSteps\n                        .map(ns => ns.node.name || 'root')\n                        .join('/')} could not travel to ${nextStep}`,\n                )\n            else if (currentNodeStep.node.meta.dynamicSpread) {\n                // we didn't find a node matching the next step, but we're inside a dynamic spread parameter node, so we'll use that\n                currentNodeStep.params.push(nextStep)\n                currentNodeStep.fragment += `/${nextStep}`\n                currentNodeStep.stepsToLeaf.shift()\n                inDynamicDeadEnd = false\n                inStaticDeadEnd = false\n            } else {\n                // we didn't find a node and the current node doesn't have spread parameters. Let's backtrack.\n                // console.log(`backtracking from ${nodeSteps.map(ns => ns.node.name).join('/')}`)\n                nodeSteps.pop()\n                currentNodeStep = [...nodeSteps].pop()\n                inDynamicDeadEnd = inStaticDeadEnd\n                inStaticDeadEnd = true\n                if (!currentNodeStep && options.silent) return null\n                else if (!currentNodeStep && !options.silent)\n                    throw new Error(`Could not find path \"${path}\" from ${this.name}`)\n            }\n        }\n\n        // append an index component if one exists\n        try {\n            const indexNode =\n                options.includeIndex && currentNodeStep.node.traverse('./index')\n\n            if (indexNode)\n                nodeSteps.push({\n                    node: indexNode,\n                    stepsToLeaf: [],\n                    params: {},\n                    fragment: '',\n                })\n        } catch (err) {}\n\n        // normalize params so that spread parameters get a key\n        nodeSteps.forEach(ns => {\n            ns.params = Array.isArray(ns.params)\n                ? { [ns.node.name.replace(/\\[\\.\\.\\.(.+)\\]/, '$1')]: ns.params }\n                : ns.params\n        })\n\n        return nodeSteps\n    }\n\n    /** @returns {InstanceType['NodeConstructor']['prototype']} */\n    toJSON() {\n        return {\n            ...this,\n            children: [...this.children],\n        }\n    }\n\n    /** @returns {string} */\n    get path() {\n        return (\n            '/' +\n            [this, ...this.ancestors]\n                .reverse()\n                .map(node => node.name)\n                .filter(Boolean)\n                .join('/')\n        )\n    }\n}\n","import { UrlParamUtils } from '../runtime/Instance/UrlParamUtils.js'\nimport { RNode } from './RNode.js'\n\n/**\n * @template {typeof RNode<any>} NodeConstructor\n */\nexport class Routify {\n    /** @type {typeof RNode<any>} */\n    NodeConstructor\n\n    /** @type {NodeConstructor['prototype']} */\n    NodeType\n\n    /** @type {NodeConstructor['prototype'][]} */\n    nodeIndex = []\n\n    /** @type {Object<string, NodeConstructor['prototype']>} */\n    rootNodes = {}\n\n    utils = new UrlParamUtils()\n\n    /**\n     * @param {string=} name relative path for the node\n     * @param {any|string=} module svelte component\n     * @returns {this['NodeType']}\n     */\n    createNode(name, module) {\n        return new this.NodeConstructor(name, module, this)\n    }\n}\n","/**\n * like assign, but without overwrite. First prop wins.\n * @param {object} target\n * @param  {...any} sources\n */\nconst gentleAssign = (target, ...sources) => {\n    sources.forEach(source =>\n        Object.keys(source).forEach(key => (target[key] = target[key] ?? source[key])),\n    )\n    return target\n}\n\n/**\n * deep assign node trees, will only overwrite undefined values\n * also merges meta\n * @param {RNodeRuntime} target eg. de\n * @param {...RNodeRuntime} sources eg. en\n * @returns {RNodeRuntime}\n */\nexport const assignNode = (target, ...sources) => {\n    // assign nodes\n    gentleAssign(target, ...sources)\n\n    // assign meta\n    gentleAssign(target.meta, ...sources.map(s => s.meta))\n\n    sources.forEach(source => {\n        source.children.forEach(sNode => {\n            let tNode = target.children.find(tNode => tNode.name === sNode.name)\n            if (!tNode) tNode = target.createChild(null, null)\n            assignNode(tNode, sNode)\n        })\n    })\n    return target\n}\n\n/**\n *\n * @param {RNodeRuntime} node\n * @param {function(RNodeRuntime['parent']):any} callback\n * @returns {RNodeRuntime['parent']|undefined}\n */\nexport const findNearestParent = (node, callback) => {\n    let parent = /** @type {RNodeRuntime} */ node.parent\n    while (parent) {\n        if (callback(parent)) return parent\n        parent = parent.parent\n    }\n}\n\n/**\n * gets the ancestry distance between two nodes. Eg.:\n * the distance between the nodes /foo and /foo/bar/baz is 2\n * @param {RNodeRuntime} parentNode\n * @param {RNodeRuntime} childNode\n * @returns {number|undefined}\n */\nexport const getDistance = (parentNode, childNode) => {\n    let child = null\n    let distance = 0\n\n    while ((child = childNode.parent)) {\n        distance++\n        if (parentNode === childNode) return distance\n    }\n}\n","/**\n * @template {{}} T\n * @template {{}} T2\n * @param {T} receiver\n * @param  {...T2} sources\n * @return {T&Partial<T2>} //partial because we're not guaranteed that types are preserved\n */\nexport function deepAssign(receiver, ...sources) {\n    for (const source of sources) {\n        if (Array.isArray(source)) {\n            // transform receiver to an array if the source is an array\n            // @ts-ignore\n            receiver = Array.isArray(receiver) ? receiver : []\n            // @ts-ignore\n            receiver.push(...source) // @ts-ignore\n        } else\n            for (const key of Reflect.ownKeys(source)) {\n                if ([source[key], receiver[key]].every(isObjectOrArray)) {\n                    receiver[key] = deepAssign(receiver[key], source[key])\n                } else receiver[key] = source[key]\n            }\n    }\n    return receiver\n}\n\nconst isObject = v =>\n    v &&\n    typeof v === 'object' &&\n    !['Array', 'Date', 'Regexp'].includes(v.constructor?.name)\n\nexport const isObjectOrArray = v => Array.isArray(v) || isObject(v)\n\n/**\n * checks for repeating patterns to prevent infinite loops\n */\nclass RepetitionChecker {\n    history = []\n    /**\n     * Pushes an entry to history. If the entry already exists, it checks\n     * if the history between previously added entry and current entry is a\n     * repetition. If so, it returns the repetition.\n     * @param {any} entry\n     * @returns {false|any[]}\n     */\n    pushAndCheck = entry => {\n        const { history } = this\n        const prevIndexCursor = history.lastIndexOf(entry) + 1\n        history.push(entry)\n        if (prevIndexCursor) {\n            const lastIndexCursor = history.length\n            const sliceLength = lastIndexCursor - prevIndexCursor\n            const slice1 = history.slice(prevIndexCursor - sliceLength, prevIndexCursor)\n            const slice2 = history.slice(prevIndexCursor)\n            if (JSON.stringify(slice1) === JSON.stringify(slice2)) return slice2\n        }\n        return false\n    }\n}\n\n/**\n * @param {RoutifyBuildtimePlugin[]} plugins\n * @returns {RoutifyBuildtimePlugin[]}\n */\nexport const normalizePlugins = plugins =>\n    // clone, flatten and normalize\n    plugins.flat().map(plugin => ({\n        ...plugin,\n        before: [].concat(plugin.before).filter(Boolean), //convert to, or keep as array\n        after: [].concat(plugin.after).filter(Boolean), //convert to, or keep as array\n    }))\n\n/**\n * @param {RoutifyBuildtimePlugin[]} plugins\n * @returns {RoutifyBuildtimePlugin[]}\n */\nexport function sortPlugins(plugins) {\n    const repetitionChecker = new RepetitionChecker()\n\n    const _sort = () => {\n        plugins.some((plugin1, index1) =>\n            plugins.some((plugin2, index2) => {\n                const plugin2ShouldPrecede =\n                    plugin1.after.includes(plugin2.name) ||\n                    plugin2.before.includes(plugin1.name)\n                const plugin2DoesPrecede = index2 < index1\n                if (plugin2ShouldPrecede && !plugin2DoesPrecede) {\n                    // move plugin2 to the index of plugin1\n                    plugins.splice(index2, 1) //remove\n                    plugins.splice(index1, 0, plugin2) //insert\n\n                    // make sure we're not stuck in a loop\n                    const loop = repetitionChecker.pushAndCheck(plugin2)\n                    if (loop)\n                        // todo create loopException\n                        throw new Error(\n                            'found infinite loop in plugins. Repeating pattern:\\n' +\n                                `${loop\n                                    .map(\n                                        p =>\n                                            `${p.name} (${['before', 'after']\n                                                .map(name => `${name}: ${p[name]}`)\n                                                .join('; ')} )`,\n                                    )\n                                    .join('\\n')\n                                    .replace(/before: ;/g, '')\n                                    .replace(/after:  /g, '')\n                                    .replace(/\\( \\)/g, '')}`,\n                        )\n                    _sort()\n                    return true\n                }\n            }),\n        )\n    }\n\n    _sort()\n\n    return plugins\n}\n\n/**\n * mock routes from an object\n * @template {RoutifyBuildtime|RoutifyRuntime} T\n * @param {T} instance\n * @param {Object.<string, any>} routes\n * @example\n * mockRoutes(instance, {\n *   module: {\n *     about: {},\n *     posts: { '[slug]': {} },\n *     admin: { crud: {}, users: {} },\n *   },\n * })\n */\nexport const mockRoutes = (instance, routes) => {\n    const rootNode = instance.createNode('module')\n    const queue = [{ parent: rootNode, children: routes.module }]\n\n    while (queue.length) {\n        const job = queue.shift()\n        Object.entries(job.children).forEach(([name, routes]) => {\n            const parent = job.parent.createChild(name, '')\n            parent.meta.name = name\n            if (name.startsWith('[')) parent.meta.dynamic = true\n            if (name.startsWith('[...')) parent.meta.dynamicSpread = true\n            queue.push({\n                /** @ts-ignore our mocked route is lacking a lot of properties */\n                parent,\n                children: routes,\n            })\n        })\n    }\n\n    return rootNode\n}\n\n/**\n * Adds props to a Svelte component\n * @example\n * const MyCompWithProps = addPropsToComp(MyComp, {msg: 'hello world'})\n * @template {typeof import('svelte/internal').SvelteComponentDev} Component\n * @param {Component} Comp\n * @param {Object<string, any>} props\n * @returns {Component}\n */\nexport const addPropsToComp = (Comp, props) => {\n    const ssrWrapper = (Comp, props) => ({\n        ...Comp,\n        $$render: (...params) => {\n            params[1] = { ...params[1], ...props }\n            return Comp.$$render(...params)\n        },\n    })\n\n    const domWrapper = (Comp, props) =>\n        function (options) {\n            return new Comp({ ...options, props: { ...options.props, ...props } })\n        }\n    const wrapper = Comp['$$render'] ? ssrWrapper : domWrapper\n\n    return wrapper(Comp, props)\n}\n\n// todo fix types below. Callback param is any, but should be V. Probably needs overloading\n\n/**\n * Returns store value on the next store update.\n * If wanted is specified, the value will only be returned once the value matches.\n * Wanted can be a callback.\n * @example\n * // returns the next value from clock\n * const hour = await next(clock)\n * @example\n * // resolves when clock is 5\n * await next(clock, 5)\n * @example\n * // resolves when clock is 5\n * const hour = await next(clock, val => val === 5)\n * @template {import('svelte/store').Readable<V>} T\n * @template V\n * @param {T} store\n * @param {((wanted: V)=>Boolean)|V=} wanted\n * @param {boolean=} strict use === matching instead of == for the wanted value\n * @returns {Promise<V>}\n */\nexport const next = (store, wanted, strict) =>\n    new Promise(resolve => {\n        let unsub\n        unsub = store.subscribe(value => {\n            // skip the first initial return\n            if (!unsub) return\n            if (\n                typeof wanted === 'undefined' ||\n                value === wanted ||\n                (value == wanted && !strict) ||\n                (typeof wanted === 'function' && /** @type {function} */ (wanted)(value))\n            ) {\n                resolve(value)\n                unsub\n            }\n        })\n    })\n","/** @returns {BrowserAdapter} */\nexport const createBrowserAdapter = opts => {\n    const delimiter = opts?.delimiter || ';'\n\n    return {\n        // Called by each router when the browser URL changes. Returns an internal URL for each respective router.\n        toRouter: (url, router) => {\n            const formatRE = router.name ? `${router.name}=(.+?)` : `(.+?)`\n            const RE = new RegExp(`(^|${delimiter})${formatRE}(${delimiter}|$)`)\n\n            const matches = url.match(RE)\n            return matches ? matches[2] : '/'\n        },\n        // compiles all router URLS into a single URL for the browser.\n        toBrowser: routers =>\n            routers\n                .map(r => (r.name ? `${r.name}=` : '') + r.url.external())\n                .join(delimiter),\n    }\n}\n","import {\n    urlFromAddress,\n    createRootLogger, // ROUTIFY-DEV-ONLY\n    debugWrapper, // ROUTIFY-DEV-ONLY\n} from '../utils/index.js'\nimport { createBrowserAdapter } from './BrowserAdapter.js'\n\nexport class Global {\n    /** @type {RoutifyRuntime[]} */\n    instances = []\n\n    constructor() {\n        globalThis['__routify'] = this\n\n        this.log = createRootLogger() // ROUTIFY-DEV-ONLY\n    }\n\n    /** @type {Router[]} */\n    get routers() {\n        return [].concat(...this.instances.map(instance => instance.routers))\n    }\n\n    browserAdapter = createBrowserAdapter()\n\n    /** @param {Router} router */\n    urlFromBrowser = router => {\n        // ROUTIFY-DEV-ONLY-START\n        if (debugWrapper)\n            return debugWrapper(\n                this.browserAdapter.toRouter,\n                'calling browserAdapter.toRouter',\n            )(urlFromAddress(), router)\n        // ROUTIFY-DEV-ONLY-END\n\n        return this.browserAdapter.toRouter(urlFromAddress(), router)\n    }\n\n    register(instance) {\n        this.instances.push(instance)\n        return this\n    }\n}\n\nexport let globalInstance = new Global()\n","import { RNode } from '../../common/RNode.js'\nimport Node from './Node.svelte'\nimport { RoutifyRuntime } from './RoutifyRuntime.js'\n\n/**\n * @extends {RNode<RoutifyRuntime>}\n */\nexport class RNodeRuntime extends RNode {\n    /** @type {LoadSvelteModule} */\n    asyncModule\n\n    /**\n     * @param {string} name\n     * @param {ReservedCmpProps} module\n     * @param {RoutifyRuntime} instance\n     * @param {LoadSvelteModule=} asyncModule\n     */\n    constructor(name, module, instance, asyncModule) {\n        super(name, module, instance)\n\n        /** @type {ReservedCmpProps} */\n        this.module = module\n\n        /** @type {LoadSvelteModule} */\n        this.asyncModule = asyncModule\n    }\n\n    get children() {\n        return this.instance.nodeIndex\n            .filter(node => node.parent === this)\n            .sort((prev, curr) => (prev.meta.order || 0) - (curr.meta.order || 0))\n    }\n\n    get pages() {\n        return this.pagesWithIndex.filter(node => node.name !== 'index')\n    }\n\n    get pagesWithIndex() {\n        return this.children\n            .filter(node => !node.meta.fallback)\n            .filter(node => !node.name.startsWith('_'))\n            .filter(node => !node.name.includes('['))\n            .filter(node => !(node.meta?.order === false))\n    }\n\n    /** @ts-ignore SvelteComponentConstructor is only available in VSCode */\n    /** @returns {Promise<import('svelte/internal').SvelteComponentDev>} */\n    async getRawComponent() {\n        const module = await this.loadModule()\n        return module?.default\n    }\n\n    async loadModule() {\n        if (!this.module && this.asyncModule) {\n            this.module = await this.asyncModule()\n        }\n        return this.module\n    }\n\n    /**\n     * Returns in a sync/async component in a synchronous wrapper\n     * @returns {() => Node}\n     **/\n    get component() {\n        const node = this\n\n        return function (options) {\n            options.props = {\n                ...options.props,\n                passthrough: options.props,\n                node,\n            }\n            return new Node({ ...options })\n        }\n    }\n\n    /**\n     * @param {object} snapshotRoot\n     */\n    importTree = snapshotRoot => {\n        const queue = [[this, snapshotRoot]]\n\n        while (queue.length) {\n            const [node, snapshot] = queue.pop()\n            const { children, ...nodeSnapshot } = snapshot\n            Object.assign(node, nodeSnapshot)\n\n            // queue children\n            for (const childSnapshot of children) {\n                const childNode = node.createChild(\n                    snapshot.name || snapshot.rootName || '',\n                )\n                queue.push([childNode, childSnapshot])\n            }\n        }\n        return this\n    }\n\n    get _fallback() {\n        return this.children.find(node => node.meta.fallback) || this.parent?._fallback\n    }\n}\n","import { RNodeRuntime } from './RNodeRuntime.js'\nimport { globalInstance } from '../Global/Global.js'\nimport { Routify } from '../../common/Routify.js'\n\n/**\n * @extends {Routify<typeof RNodeRuntime>}\n */\nexport class RoutifyRuntime extends Routify {\n    NodeConstructor = RNodeRuntime\n    mode = 'runtime'\n\n    /**@type {Router[]} routers this instance belongs to */\n    routers = []\n\n    /** @type {Object<string, RNodeRuntime>} */\n    rootNodes = {}\n\n    constructor(options) {\n        super()\n\n        this.options = options\n        if (options.routes) {\n            this.rootNodes[options.routes.rootName || 'unnamed'] = this.createNode(\n                options.routes.rootName,\n            ).importTree(options.routes)\n        }\n        this.global = globalInstance.register(this)\n        Object.defineProperty(this, 'routers', { enumerable: false })\n        this.log = this.global.log\n    }\n}\n","const defaultRe = /\\[(.+?)\\]/gm // matches [string]\nexport class UrlParamUtils {\n    constructor(RE = defaultRe) {\n        this.RE = RE\n    }\n\n    /**\n     * returns [\"slug\", \"id\"] from \"my[slug]and[id]\"\n     * @param {string} name\n     * @returns {string[]}\n     */\n    getFieldsFromName = name => [...name.matchAll(this.RE)].map(v => v[1])\n\n    /**\n     * converts \"my[slug]and[id]\" to /my(.+)and(.+)/gm\n     * @param {string} name\n     * @returns {RegExp}\n     */\n    getRegexFromName = name => new RegExp('^' + name.replace(this.RE, '(.+)') + '$')\n\n    /**\n     * returns an array of values matching a regular expression and path\n     * @param {RegExp} re\n     * @param {string} path\n     * @returns {string[]}\n     */\n    getValuesFromPath = (re, path) => (path.match(re) || []).slice(1)\n\n    /**\n     * converts (['a', 'b', 'c'], [1, 2, 3]) to {a: 1, b: 2, c: 3}\n     * @param {string[]} fields\n     * @param {string[]} values\n     * @returns\n     */\n    mapFieldsWithValues = (fields, values) =>\n        this.haveEqualLength(fields, values) &&\n        fields.reduce((map, field, index) => {\n            map[field] = values[index]\n            return map\n        }, {})\n\n    haveEqualLength = (fields, values) => {\n        if (fields.length !== values.length)\n            throw new Error(\n                'fields and values should be of same length' +\n                    `\\nfields: ${JSON.stringify(fields)}` +\n                    `\\nvalues: ${JSON.stringify(values)}`,\n            )\n        return true\n    }\n}\n","import { RouteFragment } from './RouteFragment.js'\n\n/** @type {UrlState[]} */\nconst URL_STATES = ['pushState', 'replaceState', 'popState']\n\nexport class Route {\n    /** @type {RouteFragment[]} */\n    allFragments = []\n    /** @type {RouteFragment[]} only fragments with components */\n    get fragments() {\n        return this.router.transformFragments.run(this.allFragments)\n    }\n\n    /** @type {Promise<{route: Route}>} */\n    loaded\n\n    /** @type {RoutifyLoadReturn} */\n    load = {\n        status: 200,\n        error: null,\n        maxage: null,\n        props: {},\n        redirect: null,\n    }\n\n    /**\n     * @param {Router} router\n     * @param {string} url\n     * @param {UrlState} mode\n     * @param {Object} state a state to attach to the route\n     */\n    constructor(router, url, mode, state) {\n        this.router = router\n        this.url = url\n        this.mode = mode\n        this.state = state\n\n        if (!router.rootNode) {\n            this.router.log.error(\"Can't navigate without a rootNode\")\n            const err = new Error(\"Can't navigate without a rootNode\")\n            Object.assign(err, { routify: { router } })\n            throw err\n        }\n\n        if (!URL_STATES.includes(mode))\n            throw new Error('url.mode must be pushState, replaceState or popState')\n\n        this.allFragments = this._createFragments()\n        this.log = router.log.createChild('[route]') // ROUTIFY-DEV-ONLY\n        this.log.debug('created', this) // ROUTIFY-DEV-ONLY\n    }\n\n    get params() {\n        const match = this.url.match(/\\?.+/)\n        const query = (match && match[0]) || ''\n\n        return Object.assign(\n            {},\n            ...this.allFragments.map(fragment => fragment.params),\n            this.router.queryHandler.parse(query, this),\n        )\n    }\n\n    async loadRoute() {\n        const { router } = this\n        const pipeline = [\n            this.runBeforeUrlChangeHooks,\n            this.loadComponents,\n            this.runGuards,\n            this.runPreloads,\n        ]\n\n        this.loaded = new Promise(async (resolve, reject) => {\n            for (const pretask of pipeline) {\n                const passedPreTask = await pretask.bind(this)()\n                const routerHasNewerPendingRoute = this !== router.pendingRoute.get()\n                if (!router.pendingRoute.get()) {\n                    resolve({ route: router.activeRoute.get() })\n                    return\n                } else if (routerHasNewerPendingRoute) {\n                    router.pendingRoute.get().loaded.then(resolve).catch(reject)\n                    return\n                } else if (!passedPreTask) {\n                    router.pendingRoute.set(null)\n                    return\n                }\n            }\n\n            // the route made it through all pretasks, lets set it to active\n            this.router.log.debug('set active route', this) // ROUTIFY-DEV-ONLY\n\n            const $activeRoute = this.router.activeRoute.get()\n            if ($activeRoute) router.history.push($activeRoute)\n\n            router.activeRoute.set(this)\n\n            router.afterUrlChange.run({\n                route: this,\n                history: [...router.history].reverse(),\n            })\n\n            this.router.log.debug('unset pending route', this) // ROUTIFY-DEV-ONLY\n            router.pendingRoute.set(null)\n            resolve({ route: this })\n        })\n        return this.loaded\n    }\n\n    /**\n     * converts async module functions to sync functions\n     */\n    async loadComponents() {\n        this.log.debug('load components', this) // ROUTIFY-DEV-ONLY\n        await Promise.all(this.fragments.map(fragment => fragment.node.loadModule()))\n        return true\n    }\n\n    async runPreloads() {\n        this.log.debug('run preloads', this) // ROUTIFY-DEV-ONLY\n\n        /** @type { RoutifyLoadContext } */\n        const ctx = {\n            route: this,\n            node: [...this.fragments].pop()?.node,\n        }\n\n        for (const fragment of this.fragments) {\n            if (fragment.node.module?.load) {\n                fragment.load = await fragment.node.module.load(ctx)\n                Object.assign(this.load, fragment.load)\n\n                if (this.load.redirect) return this.router.url.replace(this.load.redirect)\n            }\n        }\n\n        return this\n    }\n\n    // todo deprecate?\n    async runGuards() {\n        this.log.debug(`running guards for ${this.url}`, this) // ROUTIFY-DEV-ONLY\n\n        const components = this.fragments\n            .map(fragment => fragment.node.module)\n            .filter(module => module?.guard)\n        // process each component's guard\n        for (const module of components) {\n            console.warn(\n                '\"guard\" will be deprecated. Please use \"load.redirect\" instead.',\n            )\n            const result = await module.guard(this)\n            if (!result) return false\n        }\n        return true\n    }\n\n    async runBeforeUrlChangeHooks() {\n        return await this.router.beforeUrlChange.run({ route: this })\n    }\n\n    /**\n     * creates fragments. A fragment is the section between each / in the URL\n     */\n    _createFragments() {\n        const url = this.url.replace(/#.+/, '')\n        const rootNode = this.router.rootNode\n        const nodeChain = this.router.rootNode.getChainTo(url, {\n            rootNode,\n            allowDynamic: true,\n            includeIndex: true,\n        })\n        const fragments = nodeChain.map(\n            nc => new RouteFragment(this, nc.node, nc.fragment, nc.params),\n        )\n        return fragments\n    }\n}\n","import { URIDecodeObject } from './utils.js'\n\nexport class RouteFragment {\n    /**\n     * @param {Route} route the route this fragment belongs to\n     * @param {RNodeRuntime} node the node that corresponds to the fragment\n     * @param {String} urlFragment a fragment of the url (fragments = url.split('/'))\n     * @param {Object<string, any>} params\n     */\n    constructor(route, node, urlFragment, params) {\n        this.route = route\n        this.node = node\n        /** @type {Partial<RoutifyLoadReturn>} */\n        this.load = undefined\n        this.urlFragment = urlFragment\n        this.params = params\n\n        Object.defineProperty(this, 'route', { enumerable: false })\n    }\n\n    /**\n     * @type {Object.<string, string|string[]>}\n     **/\n    _params = {}\n\n    get params() {\n        return URIDecodeObject(this._params)\n    }\n\n    set params(params) {\n        this._params = params\n    }\n}\n","export const spreadsLast = node => (node.name.match(/\\[\\.\\.\\.(.+)\\]/) ? 1 : -1)\n\n/**\n *\n * @param {RouteFragment[]} routeFragments\n * @returns {RNodeRuntime}\n */\nexport const getNearestAncestorNodeWithSpreadParam = routeFragments => {\n    for (const fragment of [...routeFragments].reverse()) {\n        for (const node of fragment.node.parent?.children || []) {\n            const match = node.name.match(/\\[\\.\\.\\.(.+)\\]/)\n            if (match) return node\n        }\n    }\n}\n\nexport const getUrlFragments = url =>\n    url\n        .replace(/[?#].+/, '') // strip the search and hash query\n        .replace(/\\/$/, '') // strip trailing slash\n        .split('/')\n        .slice(1) // skip the first fragment since it will always be empty\n\nexport const indexOfNode = (fragments, node) =>\n    fragments.findIndex(fragment => fragment.node === node)\n\n/**\n * @template {string|string[]} T\n * @param {T} strOrArr\n * @returns {T}\n */\nconst uriDecodeStringOrArray = strOrArr =>\n    strOrArr instanceof Array\n        ? /** @type {T} */ (strOrArr.map(decodeURI))\n        : /** @type {T} */ (decodeURI(strOrArr))\n\nexport const URIDecodeObject = obj =>\n    Object.entries(obj).reduce(\n        (_return, [key, value]) => ({\n            ..._return,\n            [key]: uriDecodeStringOrArray(value),\n        }),\n        {},\n    )\n","/**\n * @typedef { Object } ParentCmpCtx\n * @prop { Route } route\n * @prop { RNodeRuntime } node\n * @prop { Object.<String|Number, String|Number> } localParams\n * @prop { Object.<String|Number, any> } options\n */\n\n/**\n * @typedef { Object } RouterOptionsNormalizedOverlay\n * @prop { UrlRewrite[] } urlRewrite hook: transforms paths to and from router and browser\n * @prop { RouterInitCallback[] } beforeRouterInit hook: runs before each router initiation\n * @prop { RouterInitCallback[] } afterRouterInit hook: runs after each router initiation\n * @prop { BeforeUrlChangeCallback[] } beforeUrlChange hook: guard that runs before url changes\n * @prop { AfterUrlChangeCallback[] } afterUrlChange hook: runs after url has changed\n * @prop { TransformFragmentsCallback[] } transformFragments hook: transform route fragments after navigation\n * @prop { OnDestroyRouterCallback[] } onDestroy hook: runs before router is destroyed\n */\n\n/**\n * @typedef { RoutifyRuntimeOptions & RouterOptionsNormalizedOverlay } RouterOptionsNormalized\n */\n\nimport { derived, get, writable } from 'svelte/store'\nimport { Route } from '../Route/Route.js'\nimport {\n    fromEntries,\n    urlFromAddress,\n    getContextMaybe,\n    getable,\n    identicalRoutes,\n} from '../utils/index.js'\nimport { BaseReflector } from './urlReflectors/ReflectorBase.js'\nimport { globalInstance } from '../Global/Global.js'\nimport { RoutifyRuntime } from '../Instance/RoutifyRuntime.js'\nimport { AddressReflector } from './urlReflectors/Address.js'\nimport { InternalReflector } from './urlReflectors/Internal.js'\nimport {\n    createGuardsCollection,\n    createPipelineCollection,\n    createSequenceHooksCollection,\n} from 'hookar'\nimport reset from '../plugins/reset/index.js'\nimport { next } from '../../common/utils.js'\n\n// todo move stripNullFields and normalizeRouterOptions to utils file.\nconst stripNullFields = obj =>\n    Object.fromEntries(Object.entries(obj).filter(([_, v]) => v != null))\n\n/**\n * merges options.plugin into options\n * @param {Partial<RoutifyRuntimeOptions>} options\n * @param {Partial<RouterOptionsNormalized>=} config\n */\nconst normalizeRouterOptions = (options, config) => {\n    config = config || {\n        name: '',\n        beforeRouterInit: [],\n        afterRouterInit: [],\n        urlRewrite: [],\n        beforeUrlChange: [],\n        afterUrlChange: [],\n        transformFragments: [],\n        onDestroy: [],\n    }\n\n    // separate plugins and options\n    const { plugins, ...optionsOnly } = options\n    const optionsGroups = [...(plugins || []), optionsOnly]\n    optionsGroups.forEach(pluginOptions => {\n        if ('plugin' in pluginOptions) normalizeRouterOptions(pluginOptions, config)\n\n        Object.entries(pluginOptions).forEach(([field, value]) => {\n            if (Array.isArray(config[field]))\n                config[field].push(...[value].flat().filter(Boolean))\n            else config[field] = value || config[field]\n        })\n    })\n    return config\n}\n\nconst defaultPlugins = [reset()]\n\n/**\n * @implements { Readable<Router> }\n */\nexport class Router {\n    /** @type { RouteStore } */\n    pendingRoute = getable(null)\n    /** @type { RouteStore } */\n    activeRoute = getable(null)\n\n    _urlReflector = null\n\n    /** @type {UrlRewrite[]} */\n    urlRewrites = []\n\n    /** @type { import('hookar').HooksCollection<RouterInitCallback> } */\n    beforeRouterInit = createSequenceHooksCollection()\n    /** @type { import('hookar').HooksCollection<RouterInitCallback> } */\n    afterRouterInit = createSequenceHooksCollection()\n    /** @type { import('hookar').HooksCollection<BeforeUrlChangeCallback> } */\n    beforeUrlChange = createGuardsCollection()\n    /** @type { import('hookar').HooksCollection<AfterUrlChangeCallback> } */\n    afterUrlChange = createSequenceHooksCollection()\n    /** @type { import('hookar').HooksCollection<TransformFragmentsCallback> } */\n    transformFragments = createPipelineCollection()\n    /** @type { import('hookar').HooksCollection<OnDestroyRouterCallback> } */\n    onDestroy = createSequenceHooksCollection()\n\n    parentElem = null\n\n    /** @type {QueryHandler} */\n    queryHandler = {\n        parse: (search, route) => fromEntries(new URLSearchParams(search)),\n        stringify: (params, route) => {\n            const query = new URLSearchParams(params).toString()\n            return query ? `?${query}` : ''\n        },\n    }\n\n    url = {\n        internal: () => this.url.getPending() || this.url.getActive(),\n        external: () => this.getExternalUrl(),\n        getActive: () => get(this.activeRoute)?.url,\n        getPending: () => get(this.pendingRoute)?.url,\n        toString: () => this.url.internal(),\n        set: this._setUrl.bind(this),\n        push: (url, state = {}) => this._setUrl(url, 'pushState', false, state),\n        replace: (url, state = {}) => this._setUrl(url, 'replaceState', false, state),\n        pop: (url, state = {}) => this._setUrl(url, 'popState', false, state),\n    }\n\n    /**\n     * function that resolves after the active route has changed\n     * @returns {Promise<Route>} */\n    ready = async () =>\n        (!this.pendingRoute.get() && this.activeRoute.get()) || next(this.activeRoute)\n\n    /** @type {Route[]} */\n    history = []\n\n    /**\n     * @param {Partial<RoutifyRuntimeOptions>} input\n     */\n    constructor(input) {\n        const { subscribe, set } = writable(this)\n        this.subscribe = subscribe\n        this.triggerStore = () => set(this)\n\n        input.plugins = [...(input.plugins || []), ...defaultPlugins].filter(Boolean)\n        this.init(input)\n        this.params = derived(this.activeRoute, $activeRoute => $activeRoute.params)\n        // we're using setTimeout to make sure outgoing routers have been destroyed\n        // this also prevents the first router from absorbing the url from the address and\n        // then reflecting only its internal url before other routers have absorbed the url\n        this.afterUrlChange(() => setTimeout(() => this._urlReflector.reflect()))\n        this.activeRoute.get = () => get(this.activeRoute)\n        this.pendingRoute.get = () => get(this.pendingRoute)\n    }\n\n    /**\n     * @param {Partial<RoutifyRuntimeOptions>} input\n     */\n    init(input) {\n        const firstInit = !this.options\n\n        // we need to strip undefine / null fields since they would overwrite existing options\n        input = stripNullFields(input)\n        /** @type {Partial<RouterOptionsNormalized>} */\n        this.options = normalizeRouterOptions({ ...this.options, ...input })\n\n        let {\n            instance,\n            rootNode,\n            name,\n            routes,\n            urlRewrite,\n            urlReflector,\n            url,\n            passthrough,\n            beforeUrlChange,\n            afterUrlChange,\n            transformFragments,\n            onDestroy,\n            beforeRouterInit,\n            afterRouterInit,\n            queryHandler,\n        } = this.options\n\n        if (queryHandler) this.queryHandler = queryHandler\n\n        beforeUrlChange.forEach(this.beforeUrlChange)\n        transformFragments.forEach(this.transformFragments)\n        afterUrlChange.forEach(this.afterUrlChange)\n        onDestroy.forEach(this.onDestroy)\n        beforeRouterInit.forEach(this.beforeRouterInit)\n        afterRouterInit.forEach(this.afterRouterInit)\n\n        this.beforeRouterInit.run({ router: this, firstInit })\n\n        const parentCmpCtx = getContextMaybe('routify-fragment-context')\n\n        /** @type {RoutifyRuntime} */\n        this.instance =\n            instance ||\n            this.instance ||\n            parentCmpCtx?.route.router.instance ||\n            globalInstance.instances[0] ||\n            new RoutifyRuntime({})\n\n        this.name = name\n        this.urlRewrites = urlRewrite\n\n        // ROUTIFY-DEV-ONLY-START\n        this.log =\n            this.log || this.instance.log.createChild(this.name || '[unnamed instance]')\n        // ROUTIFY-DEV-ONLY-END\n\n        if (passthrough && !(passthrough instanceof Router))\n            passthrough = parentCmpCtx?.route.router || passthrough\n\n        this.passthrough = passthrough || this.passthrough\n\n        globalInstance.instances.forEach(inst => {\n            const index = inst.routers.indexOf(this)\n            if (index !== -1) inst.routers.splice(index, 1)\n        })\n\n        this.instance.routers.push(this)\n\n        if (routes) this.importRoutes(routes)\n\n        this.parentCmpCtx = parentCmpCtx\n        /** @type {RNodeRuntime} */\n        this.rootNode = rootNode || this.rootNode || this.instance.rootNodes.default\n\n        this.log.debug('initiated router') // ROUTIFY-DEV-ONLY\n\n        if (this.url.getActive()) {\n            this.log.debug('router was created with activeUrl') // ROUTIFY-DEV-ONLY\n            this._setUrl(this.url.getActive(), 'pushState', true)\n        }\n\n        const shouldInstallUrlReflector =\n            !this.urlReflector ||\n            (urlReflector && !(this.urlReflector instanceof urlReflector))\n\n        if (shouldInstallUrlReflector) {\n            urlReflector =\n                urlReflector ||\n                (typeof window != 'undefined' ? AddressReflector : InternalReflector)\n            this.setUrlReflector(urlReflector)\n        }\n\n        if (url) this.url.replace(url)\n        this.triggerStore()\n        this.afterRouterInit.run({ router: this, firstInit })\n    }\n\n    setParentElem = elem => (this.parentElem = elem.parentElement)\n\n    importRoutes(routes) {\n        this.rootNode = this.instance.createNode().importTree(routes)\n        this.instance.rootNodes[routes.rootName || 'unnamed'] = this.rootNode\n    }\n\n    /**\n     * converts a URL or Routify's internal URL to an external URL (for the browser)\n     * @param {string=} url\n     * @returns\n     */\n    getExternalUrl = url => {\n        const result = this.urlRewrites.reduce(\n            (_url, rewrite) => rewrite.toExternal(_url, { router: this }),\n            url || this.url.internal(),\n        )\n        return result\n    }\n\n    /**\n     * converts an external URL (from the browser) to an internal URL\n     * @param {string} url\n     * @returns\n     */\n    getInternalUrl = url =>\n        this.urlRewrites.reduce(\n            (_url, rewrite) => rewrite.toInternal(_url, { router: this }),\n            url,\n        )\n\n    /**\n     *\n     * @param {string} url\n     * @param {UrlState} mode pushState, replaceState or popState\n     * @param {boolean} [isInternal=false] if the URL is already internal, skip rewrite.toInternal\n     * @param {Object=} state a state to attach to the route\n     * @returns {Promise<true|false>}\n     */\n    async _setUrl(url, mode, isInternal, state) {\n        if (!isInternal) url = this.getInternalUrl(url)\n\n        url = url || '/'\n        url = url.replace(/(.+)\\/+([#?]|$)/, '$1$2') // strip trailing slashes\n        const { activeRoute, pendingRoute } = this\n\n        // ROUTIFY-DEV-ONLY-START\n        const { debug, groupCollapsed, trace, groupEnd } = this.log\n        if (this.log.level >= 4) {\n            const info = {\n                url,\n                mode,\n                prev: this.url.internal(),\n                browserOld: urlFromAddress(),\n                state,\n            }\n            ;[groupCollapsed('set url', info), trace(), groupEnd()]\n        }\n        // ROUTIFY-DEV-ONLY-END\n\n        if (!url.startsWith('/')) url = url.replace(new URL(url).origin, '')\n\n        const route = new Route(this, url, mode, state)\n\n        const currentRoute = pendingRoute.get() || activeRoute.get()\n        if (identicalRoutes(currentRoute, route)) {\n            debug('current route is identical - skip', currentRoute, route) // ROUTIFY-DEV-ONLY\n            return true\n        }\n\n        route.log.debug('set pending route', route) // ROUTIFY-DEV-ONLY\n        pendingRoute.set(route)\n        await route.loadRoute()\n\n        return true\n    }\n\n    destroy() {\n        this.log.debug(`destroying router`) // ROUTIFY-DEV-ONLY\n        this.instance.routers = this.instance.routers.filter(router => router !== this)\n        this.onDestroy.run({ router: this })\n    }\n\n    /** @type {BaseReflector} */\n    get urlReflector() {\n        return this._urlReflector\n    }\n\n    /** @param {typeof BaseReflector} UrlReflector */\n    setUrlReflector(UrlReflector) {\n        this._urlReflector?.uninstall()\n        this._urlReflector = new UrlReflector(this)\n        this._urlReflector.install()\n        this.triggerStore()\n    }\n}\n\n/**\n * Creates a new router\n * @param  {Partial<RoutifyRuntimeOptions>} options\n */\nexport const createRouter = options => new Router(options)\n","import { createSequenceHooksCollection } from 'hookar'\nimport { get } from 'svelte/store'\nimport { urlFromAddress } from '../../utils/index.js'\nimport { BaseReflector } from './ReflectorBase.js'\n\nexport class AddressReflector extends BaseReflector {\n    /** @param {Router} router */\n    constructor(router) {\n        super(router)\n        const { instance, urlRewrites } = router\n        const { urlFromBrowser, browserAdapter } = instance.global\n\n        if (!history['onPushstate']) {\n            this.log.debug('polyfill history hooks') // ROUTIFY-DEV-ONLY\n            polyfillHistory()\n        }\n\n        /** @param {('push'|'replace')} method */\n        const createStateEventHandler = method => {\n            return function (data, title, url) {\n                const routerName = data?.routify?.router ?? false\n\n                if (routerName === false) url = browserAdapter.toRouter(url, router)\n                else if (routerName !== router.name) return false\n                for (const rewrite of urlRewrites)\n                    url = rewrite.toInternal(url, { router })\n                router.url[method](url)\n            }\n        }\n\n        this.absorb = () => router.url.replace(urlFromBrowser(router))\n        this._pushstateHandler = createStateEventHandler('push')\n        this._replacestateHandler = createStateEventHandler('replace')\n        this._popstateHandler = () => router.url.pop(urlFromBrowser(router))\n    }\n\n    install() {\n        this.hooks = [\n            history['onPushstate'](this._pushstateHandler),\n            history['onReplacestate'](this._replacestateHandler),\n            history['onPopstate'](this._popstateHandler),\n        ]\n\n        if (!get(this.router.activeRoute)) this.absorb()\n        else this.reflect()\n    }\n\n    uninstall() {\n        this.hooks.forEach(unreg => unreg())\n        setTimeout(() => this.reflect())\n    }\n\n    reflect = () => {\n        const { mode } = get(this.router.activeRoute)\n        if (mode === 'popState') return false\n        const { routers, browserAdapter } = this.router.instance.global\n\n        const addressRouters = routers.filter(\n            router => router.urlReflector instanceof this.constructor,\n        )\n\n        const url = browserAdapter.toBrowser(addressRouters)\n\n        // ROUTIFY-DEV-ONLY-START\n        this.log.debug('pushing internal url to browser', {\n            mode,\n            url,\n            currentBrowserUrl: urlFromAddress(),\n            currentInternalUrl: this.router.url.internal(),\n        })\n        // ROUTIFY-DEV-ONLY-END\n\n        history[`${mode}Native`]({}, '', url)\n    }\n}\n\nfunction polyfillHistory() {\n    const hooks = {\n        /** @type {import('hookar').HooksCollection<History['pushState']>} */\n        onPushstate: createSequenceHooksCollection(),\n        /** @type {import('hookar').HooksCollection<History['replaceState']>} */\n        onReplacestate: createSequenceHooksCollection(),\n        onPopstate: createSequenceHooksCollection(),\n    }\n    Object.assign(history, hooks)\n\n    // backup native methods\n    const { pushState, replaceState } = history\n    history['pushStateNative'] = pushState\n    history['replaceStateNative'] = replaceState\n\n    history.pushState = hooks.onPushstate.run\n    history.replaceState = hooks.onReplacestate.run\n    window.addEventListener('popstate', hooks.onPopstate.run)\n\n    return true\n}\n","import { BaseReflector } from './ReflectorBase.js'\n\n// todo should these extend a base class?\n\nexport class InternalReflector extends BaseReflector {}\n","import { BaseReflector } from './ReflectorBase.js'\n\nexport class LocalStorageReflector extends BaseReflector {\n    /** @param {Router} router */\n    constructor(router) {\n        super(router)\n        this.storageName = `__routify-router-${this.router.name}`\n    }\n    reflect() {\n        window.localStorage.setItem(this.storageName, this.router.url.internal())\n    }\n}\n","export class BaseReflector {\n    /** @param {Router} router */\n    constructor(router) {\n        this.router = router\n        this.log = this.router.log\n    }\n    install() {}\n    uninstall() {}\n    reflect() {}\n}\n","import { derived } from 'svelte/store'\nimport { pathAndParamsToUrl, contexts, populateUrl } from '../utils/index.js'\nimport { get } from 'svelte/store'\nexport * from './scroll'\n\n/**\n * gets most recent common ancestor\n * @param {RNodeRuntime} node1\n * @param {RNodeRuntime} node2\n */\nexport const getMRCA = (node1, node2) => {\n    const lineage1 = [node1, ...node1.ancestors]\n    const lineage2 = [node2, ...node2.ancestors]\n    return lineage1.find(node => lineage2.includes(node))\n}\n\nexport const getPath = (node1, node2) => {\n    const lineage1 = [node1, ...node1.ancestors]\n    const lineage2 = [node2, ...node2.ancestors]\n    const mrca = getMRCA(node1, node2)\n    const backtrackSteps = lineage1.indexOf(mrca)\n    const backtrackStr = backtrackSteps ? '../'.repeat(backtrackSteps) : ''\n    const forwardSteps = lineage2.indexOf(mrca)\n    const forwardStepsStr = lineage2\n        .slice(0, forwardSteps)\n        .reverse()\n        .map(n => n.name)\n        .join('/')\n    return backtrackStr + forwardStepsStr\n}\n\n/**\n * @callback Goto\n * @param {string} path relative, absolute or named URL\n * @param {Object.<string, string>=} userParams\n * @param {any=} options\n * @type {Readable<Goto>} */\nexport const goto = {\n    subscribe: (run, invalidate) => {\n        const { router } = contexts\n        return derived(url, $url => (path, userParams, options) => {\n            const newUrl = $url(path, userParams)\n            router.url.push(newUrl)\n        }).subscribe(run, invalidate)\n    },\n}\n\n/**\n * @template T\n * @typedef {import('svelte/store').Readable<T>} Readable\n */\n\n/**\n * @typedef {Object} IsActiveOptions\n * @prop {Boolean} [recursive=true] return true if descendant is active\n */\n\n/**\n * @callback Url\n * @param {string} inputPath\n * @param {Object.<string, string>=} userParams\n * @returns {string}\n *\n * @type {Readable<Url>}\n **/\nexport const url = {\n    subscribe: (run, invalidate) => {\n        const { router } = contexts\n        const originalOriginNode = contexts.fragment.node\n        return derived(router.activeRoute, activeRoute => {\n            // in case we swapped the routes tree (rootNode), make sure we find\n            // the node that corresponds with the previous origin\n            // otherwise mrca will break as there's no shared ancestor\n            const originNode = router.rootNode.traverse(originalOriginNode.path)\n            return (inputPath, userParams = {}) => {\n                // we want absolute urls to be relative to the nearest router. Ironic huh\n                const offset = inputPath.startsWith('/') ? router.rootNode.path : ''\n                const targetNode = originNode.traverse(offset + inputPath)\n                if (!targetNode) {\n                    console.error('could not find destination node', inputPath)\n                    return\n                }\n                const mrca = getMRCA(targetNode, router.rootNode)\n                const path = '/' + getPath(mrca, targetNode)\n\n                const params = {\n                    ...inheritedParams(targetNode, activeRoute),\n                    ...userParams,\n                }\n\n                const internalUrl = populateUrl(path, params, activeRoute)\n                return router.getExternalUrl(internalUrl)\n            }\n        }).subscribe(run, invalidate)\n    },\n}\n\n/**\n *\n * @param {RNodeRuntime} node\n * @param {Route} route\n */\nconst inheritedParams = (node, route) => {\n    const lineage = [node, ...node.ancestors].reverse()\n    const params = lineage.map(\n        _node =>\n            route.allFragments.find(\n                // compare both path and node\n                // node could have moved /shop/[product], eg: to /en/shop/[product]\n                // but could also have been replaced by a different, but matching node\n                // if the route tree changed, eg: /en/shop/[product] /da/shop/[product]\n                fragment => fragment.node === _node || fragment.node.path === _node.path,\n            )?.params,\n    )\n    return Object.assign({}, ...params)\n}\n\n/**\n * @type {Readable<Object.<string, any>>}\n */\nexport const params = {\n    subscribe: (run, invalidate) =>\n        derived(contexts.router.params, params => params).subscribe(run, invalidate),\n}\n\n/**\n * @callback IsActive\n * @param {String=} path\n * @param {Object.<string,string>} [params]\n * @param {IsActiveOptions} [options]\n * @returns {Boolean}\n *\n * @type {Readable<IsActive>} */\nexport const isActive = {\n    subscribe: (run, invalidate) =>\n        derived(contexts.router.activeRoute, isActiveRoute).subscribe(run, invalidate),\n}\n\n/**\n * @param {Route} $route\n */\nexport const isActiveRoute = $route => isActiveUrl($route.url, $route.params)\n\nexport const isActiveUrl = (url, actualParams = {}) => {\n    const stripLastIndexAndSlash = str => str.replace(/(\\/index)?\\/*$/, '')\n\n    // strip search and hash\n    url = url.replace(/[?#].+/, '')\n    url = stripLastIndexAndSlash(url)\n\n    /** @type {IsActive} */\n    return (path, params = {}, options = {}) => {\n        const { recursive } = { recursive: true, ...options }\n\n        // return false if wanted params aren't satisfied\n        for (const wantedParam of Object.keys(params))\n            if (actualParams[wantedParam] !== params[wantedParam]) return false\n\n        path = pathAndParamsToUrl(path, { ...actualParams, ...params }, x => '', true)\n        // if path ends in /index, make /index optional. The browser URL might say /foo and not /foo/index\n        path = stripLastIndexAndSlash(path)\n        const suffix = recursive ? '(/|$)' : '/?$'\n\n        const regexPath = new RegExp(`^${path}${suffix}`)\n        return regexPath.test(url)\n    }\n}\n/**\n * @param {string} path\n */\nexport const resolveNode = path => {\n    const { node } = contexts.fragment\n    const { router } = contexts\n    return traverseNode(node, path, router)\n}\n\n/**\n *\n * @param {RNodeRuntime} node\n * @param {string} path\n * @param {Router} router\n * @returns {RNodeRuntime}\n */\nexport const traverseNode = (node, path, router) =>\n    path.startsWith('/') ? router.rootNode.traverse(`.${path}`) : node.traverse(path)\n\n/**\n * @template {Function} T\n * @template U\n * @param {T} callback\n * @returns {Readable<T extends () => infer U ? U : any>}\n */\nconst pseudoStore = callback => ({\n    subscribe: run => {\n        run(callback())\n        return () => {}\n    },\n})\n\nexport const context = pseudoStore(() => contexts.fragment)\n\nexport const node = pseudoStore(() => get(context).node)\n\nexport const meta = pseudoStore(() => get(node).meta)\n\n/** @type {Readable<Route>} */\nexport const activeRoute = {\n    subscribe: run => contexts.router.activeRoute.subscribe(run),\n}\n\n/** @type {Readable<Route>} */\nexport const pendingRoute = {\n    subscribe: run => contexts.router.pendingRoute.subscribe(run),\n}\n\n/**@type {Readable<function(AfterUrlChangeCallback):any>} */\nexport const afterUrlChange = {\n    subscribe: run => {\n        const hookHandles = []\n        /**\n         * @param {AfterUrlChangeCallback} callback\n         */\n        const register = callback => {\n            const unhook = contexts.router.afterUrlChange(callback)\n            hookHandles.push(unhook)\n            return unhook\n        }\n        run(register)\n        return () => hookHandles.map(unhook => unhook())\n    },\n}\n\n/**@type {Readable<function(BeforeUrlChangeCallback):any>} */\nexport const beforeUrlChange = {\n    subscribe: run => {\n        const hookHandles = []\n        /**\n         * @param {BeforeUrlChangeCallback} callback\n         */\n        const register = callback => {\n            const unhook = contexts.router.beforeUrlChange(callback)\n            hookHandles.push(unhook)\n            return unhook\n        }\n        run(register)\n        return () => hookHandles.map(unhook => unhook())\n    },\n}\n","import { globalInstance } from '../index.js'\n\n/**\n * @type {import('./scroll')['persistentScrollTo']}\n * @param {HTMLElement} el\n * @param {ScrollIntoViewOptions} options\n * @param {number} timeout\n */\n// @ts-ignore\nexport const persistentScrollTo = (el, options, timeout) => {\n    options = options || {}\n    options.behavior = 'auto'\n    const limits = getScrollBoundaries()\n    const observer = new MutationObserver(() => scopedScrollIntoView(el, limits))\n    observer.observe(document.body, {\n        childList: true,\n        subtree: true,\n        attributes: true,\n        characterData: true,\n    })\n    const stopScroll = () => observer.disconnect()\n\n    if (timeout) {\n        return new Promise(resolve =>\n            setTimeout(() => {\n                stopScroll()\n                resolve()\n            }, timeout),\n        )\n    } else {\n        timeout\n        return stopScroll\n    }\n}\n/**\n * returns all the elements that should scrolling shouldn't propagate past, ie. routify-scroll=lock and router parent elements\n * @returns  {HTMLElement[]}\n */\nexport const getScrollBoundaries = () => [\n    ...document.querySelectorAll('[data-routify-scroll=\"lock\"]'),\n    ...globalInstance.routers\n        .filter(router => router.parentCmpCtx)\n        .map(router => router.parentElem),\n]\n\n/**\n *\n * @param {HTMLElement} elem\n * @param {HTMLElement[]=} limits\n */\nexport const scopedScrollIntoView = (elem, limits) => {\n    limits = limits || getScrollBoundaries()\n\n    let parent = elem\n    while (parent?.scrollTo && !limits.includes(parent)) {\n        const targetRect = elem.getBoundingClientRect()\n        const parentRect = parent.getBoundingClientRect()\n\n        const top = targetRect.top - parentRect.top\n        const left = targetRect.left - parentRect.left\n\n        parent.scrollTo({ top, left })\n        parent = parent.parentElement\n    }\n}\n","// @ts-ignore\nimport Router from './Router/Router.svelte'\nimport { createRouter, Router as RouterClass } from './Router/Router.js'\nimport { RoutifyRuntime } from './Instance/RoutifyRuntime.js'\n\nimport { globalInstance } from './Global/Global.js'\nimport { AddressReflector } from './Router/urlReflectors/Address.js'\nimport { LocalStorageReflector } from './Router/urlReflectors/LocalStorage.js'\nimport { InternalReflector } from './Router/urlReflectors/Internal.js'\nimport Component from './renderer/ComposeFragments.svelte'\n\nexport const Routify = RoutifyRuntime\n\nexport {\n    createRouter,\n    Router,\n    RouterClass,\n    globalInstance,\n    AddressReflector,\n    LocalStorageReflector,\n    InternalReflector,\n    Component,\n}\n\nexport * from './helpers/index.js'\nexport * from '../common/helpers.js'\n","/**\n * Removes parent modules from a node\n *  @returns {RoutifyRuntimePlugin}\n **/\nexport default () => ({\n    beforeUrlChange: ({ route }) => {\n        const fragments = route.allFragments\n\n        fragments.forEach(fragment => {\n            const { reset } = fragment.node.meta\n            if (reset) {\n                const index = fragments.indexOf(fragment)\n                const deleteCount = reset === true ? index : Number(reset)\n                const start = index - deleteCount\n                fragments.splice(start, index)\n            }\n        })\n        return true\n    },\n})\n","/**\n * @typedef {string|RNodeRuntime} MultiPage\n * @typedef {{pages: RNodeRuntime[], single: Boolean}} Multi\n * @typedef {Boolean|MultiPage[]|Partial<{pages: MultiPage[], single: Boolean}>} MultiInput\n */\n\n/**\n *\n * @param {RNodeRuntime} node\n */\nconst nodeIsPage = node =>\n    !node.meta.fallback && !node.name.startsWith('_') && node.meta?.order !== false\n\n/**\n * @param {RNodeRuntime} refNode\n * @param {import('../types').RenderContext} parentContext\n */\nconst getChildren = (refNode, parentContext) => {\n    const parentNode = parentContext?.node || refNode.parent\n\n    const matches = parentNode\n        ? parentNode.children.filter(node => node === refNode || nodeIsPage(node))\n        : [refNode]\n\n    return matches\n}\n\n/**\n * @param {RNodeRuntime | string} nodeOrString\n */\nconst coerceStringToNode = (nodeOrString, refNode) =>\n    typeof nodeOrString === 'string' ? refNode.traverse(nodeOrString) : nodeOrString\n\n/**\n * @param {undefined|Boolean|MultiPage[]} pagesInput\n * @param {RNodeRuntime} refNode\n * @param {import('../types').RenderContext} parentContext\n * @returns {RNodeRuntime[]}\n */\nconst coercePagesToNodes = (pagesInput, refNode, parentContext) => {\n    const pageInputs = Array.isArray(pagesInput)\n        ? pagesInput\n        : getChildren(refNode, parentContext)\n    return pageInputs.map(page => coerceStringToNode(page, refNode))\n}\n\n/**\n * @param {boolean|Array|Object} multiInput\n * @returns {Multi}\n */\nconst convertToObj = multiInput =>\n    multiInput instanceof Object\n        ? !Array.isArray(multiInput)\n            ? multiInput\n            : { pages: multiInput }\n        : {}\n\n/**\n * normalize multi object. If no pages are specified, use siblings of the refNode\n * @param {MultiInput} multiInput\n * @param {RNodeRuntime|null} refNode\n * @param {import('../types').RenderContext} parentContext\n * @returns {Multi}\n */\nexport const normalizeMulti = (multiInput, refNode, parentContext) => {\n    const multi = convertToObj(multiInput)\n\n    multi.single = multi.single || !multiInput\n    multi.pages = coercePagesToNodes(multi.pages, refNode, parentContext)\n\n    return multi\n}\n","import { get, writable } from 'svelte/store'\nimport { getContext } from 'svelte'\nexport * from './logger.js' // ROUTIFY-DEV-ONLY\n\n// /**\n//  * writable with subscription hooks\n//  * @param {any} value\n//  */\n// export const writable2 = value => {\n//     let subscribers = []\n//     let { set, subscribe, update } = writable(value)\n\n//     const hooks = {\n//         onSub: () => {},\n//         onUnsub: () => {},\n//         onFirstSub: () => {},\n//         onLastUnsub: () => {},\n//     }\n\n//     const newSubscribe = (run, invalidator) => {\n//         // hooks\n//         hooks.onSub()\n//         if (!subscribers.length) hooks.onFirstSub()\n\n//         const unsub = subscribe(run, invalidator)\n//         subscribers.push(unsub)\n//         return () => {\n//             hooks.onUnsub()\n//             if (subscribers.length === 1) hooks.onLastUnsub()\n\n//             subscribers = subscribers.filter(_unsub => _unsub !== unsub)\n//             unsub()\n//         }\n//     }\n\n//     return {\n//         set,\n//         subscribe: newSubscribe,\n//         update,\n//         subscribers,\n//         hooks,\n//     }\n// }\n\nexport const isDescendantElem = parent => elem => {\n    while ((elem = elem.parentNode)) if (elem === parent) return true\n    return false\n}\n\nexport const getUrlFromClick = event => {\n    const el = event.target.closest('a')\n    const href = el && el.href\n\n    if (\n        event.ctrlKey ||\n        event.metaKey ||\n        event.altKey ||\n        event.shiftKey ||\n        event.button ||\n        (event.key && event.key !== 'Enter') ||\n        event.defaultPrevented\n    )\n        return\n    if (!href || el.target || el.host !== location.host) return\n\n    const url = new URL(href)\n    const relativeUrl = url.pathname + url.search + url.hash\n\n    event.preventDefault()\n    return relativeUrl\n}\n\n// TODO ADD TEST\n/**\n * Creates an url from a path and params objects\n * @example no wildcard\n * ```javascript\n * pathAndParamsToUrl('/foo/[slug]/[id]', {slug: 'hello'})\n * // /foo/hello/[id]\n * ```\n * @example wildcard\n * ```javascript\n * pathAndParamsToUrl('/foo/[slug]/[id]', {slug: 'hello'}, undefined, true)\n * // /foo/hello/.*?\n * ```\n * @param {string} path\n * @param {Object.<string|number,string|number>} params\n * @param {function} queryHandler\n * @param {boolean} useWildcards inserts wildcards for unmatched params\n * @returns {string}\n */\nexport const pathAndParamsToUrl = (path, params = {}, queryHandler, useWildcards) => {\n    Object.entries(params).forEach(([key, val]) => {\n        if (path.includes(`[${key}]`)) {\n            path = path.replace(`[${key}]`, val)\n            delete params[key]\n        }\n    })\n\n    if (useWildcards) path = insertWildcards(path)\n\n    return path + queryHandler(params)\n}\n\n/**\n * replaces /path/[foo]/bar with /path/.*?/bar\n * @param {string} str\n */\nexport const insertWildcards = str => {\n    return str.replace(/\\[.*?\\]/, '.*?')\n}\n\nexport const fromEntries = iterable => {\n    return [...iterable].reduce((obj, [key, val]) => {\n        obj[key] = val\n        return obj\n    }, {})\n}\n\n/**\n * replaces [] brackets in a string with actual params\n * @param {string} path\n * @param {Object.<string,(string|string[])>} params\n * @param {Route} route\n * @returns\n */\nexport const populateUrl = (path, params, route) => {\n    /** @type {Object.<string, string>} */\n    const overloads = {}\n    Object.entries(params).forEach(([param, value]) => {\n        const RE = new RegExp(`\\\\[(\\.\\.\\.)?${param}\\\\]|\\\\:${param}`)\n        value = Array.isArray(value) ? value.join('/') : value\n        if (path.match(RE)) path = path.replace(RE, encodeURI(value))\n        else overloads[param] = value\n    })\n    const query = route.router.queryHandler.stringify(overloads, route)\n\n    return path + query\n}\n\nexport const urlFromAddress = () =>\n    (({ pathname, search, hash }) => pathname + search + hash)(window.location)\n\nlet _globalAutoIncrementerCount = {}\nexport const autoIncrementer = (\n    storeObj = _globalAutoIncrementerCount,\n    name = '__NA',\n) => {\n    storeObj[name] = storeObj[name] || 0\n    storeObj[name]++\n    return storeObj[name]\n}\n\n/**\n * @template  T\n * @param {string} prop\n * @returns {function(T, number, T[]): boolean}\n */\nexport const distinctBy = prop => (obj, i, arr) =>\n    arr.findIndex(_obj => _obj[prop] === obj[prop]) === i\n\nexport const contexts = {\n    /** @type {Router} */\n    get router() {\n        return getContext('routify-fragment-context').router\n    },\n    /** @type {FragmentContext} */\n    get fragment() {\n        return getContext('routify-fragment-context')\n    },\n}\n\n/**\n * gets context if available without throwing errors outside component initialization\n * @param {string} name\n * @returns\n */\nexport const getContextMaybe = name => {\n    try {\n        return getContext(name)\n    } catch (err) {}\n}\n\n/**\n * @template T\n * @typedef {import('svelte/store').Writable<T> & {get: ()=>T}} Getable\n */\n\n/**\n * like writable, but with an added get prop\n * @template T\n * @param  {T} value\n * @param  {import('svelte/store').StartStopNotifier<T>=} start\n * @returns {Getable<T>}\n */\nexport const getable = (value, start) => {\n    const store = writable(value, start)\n    return Object.assign(store, { get: () => get(store) })\n}\n\n/**\n * checks if all route.fragments and url are identical\n * @param  {...Route} routes\n * @returns\n */\nexport const identicalRoutes = (...routes) =>\n    routes\n        .map(route => JSON.stringify([route?.allFragments, route?.url]))\n        .reduce((prev, curr) => prev === curr && curr)\n\n/**\n * Shallow clones class instance.\n * Variadic parameters are assigned to clone.\n * @template T\n * @param {T} obj\n * @param  {...any} rest\n * @returns {T}\n */\nexport const clone = (obj, ...rest) =>\n    Object.assign(Object.create(Object.getPrototypeOf(obj)), obj, ...rest)\n","import { createLogger } from 'consolite'\nconst log = createLogger('[rf3]')\n\nexport const createRootLogger = () => {\n    Object.assign(log, loadState())\n    return new Proxy(log, {\n        get: (target, prop) => target[prop],\n        set: (target, prop, value) => {\n            target[prop] = value\n            saveState(log)\n            return false\n        },\n    })\n}\n\nexport const loadState = () => {\n    if (typeof window === 'undefined') {\n        const level = process.env.DEBUG_LEVEL\n        const filter = process.env.DEBUG_FILTER\n        return { level, filter }\n    } else {\n        return JSON.parse(localStorage.getItem('__routify.logState') || '{}')\n    }\n}\n\nexport const saveState = log => {\n    const { level, filter } = log\n    if (typeof window === 'undefined') {\n        process.env.DEBUG_LEVEL = level\n        process.env.DEBUG_FILTER = filter\n    } else localStorage.setItem('__routify.logState', JSON.stringify({ filter, level }))\n}\n\n/**\n * @template {function} T\n * @param {T} fn\n * @param {string} msg\n * @returns {T}\n */\nexport const debugWrapper =\n    (fn, msg) =>\n    /** @ts-ignore */\n    (...params) => {\n        const result = fn(...params)\n        log.debug(msg, { params, result })\n        return result\n    }\n","/**\n * @callback Filter\n * @param {string[]} prefixes\n */\n\n/**\n * @typedef {Object} Logger\n * @prop {createLogger} create Creates new logger.\n * @prop {createLogger} createChild Creates a child logger. Prefix will be inherited. Level and levels will be inherited if undefined.\n * @prop {createLogger} createParent Creates a parent logger. Prefix will be inherited. Level and levels will be inherited if undefined.\n * @prop {Object.<string, number>} levels\n * @prop {number} level\n * @prop {Filter|string|RegExp} filter\n * @prop {Logger} root\n * @prop {Logger} parent\n */\n\nconst defaults = {\n  filter: '',\n  level: 3,\n  levels: {\n    default: 3,\n    error: 1,\n    warn: 2,\n    debug: 4,\n    trace: 4,\n  },\n}\n\nconst noop = x => x\nconst unique = (v, i, a) => a.indexOf(v) === i\n\n// $& means the whole matched string\nconst escapeRegExp = str => str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\nconst escapeIfString = str => (typeof str === 'string' ? escapeRegExp(str) : str)\n\nexport class Consolite {\n  prefix = []\n  _filter = null\n  _level = null\n  _levels = {}\n  parent = null\n\n  constructor(...prefix) {\n    this.prefix.push(...prefix)\n\n    const withinLevel = prop => this.levels[prop] <= this.level\n    const passesFilter = () =>\n      typeof this.filter === 'function'\n        ? this.filter(prefix)\n        : prefix.join('').match(escapeIfString(this.filter))\n\n    this.register = (prop, fn) =>\n      Object.defineProperty(this, prop, {\n        get: () => {\n          const canBind = typeof fn === 'function'\n          const shouldPrint = withinLevel(prop) && passesFilter() && canBind\n          const prefixes = prefix.map(p => (typeof p === 'string' ? p : p(prop, this)))\n\n          return shouldPrint ? fn.bind(console, ...prefixes) : noop\n        },\n      })\n    \n    // attach console methods\n    Object.keys(console).forEach(prop => this.register(prop, console[prop]))\n  }\n\n  get level() {\n    return this._level ?? this.parent?.level ?? defaults.level\n  }\n  set level(val) {\n    this._level = val\n  }\n  get filter() {\n    return this._filter ?? this.parent?.filter ?? defaults.filter\n  }\n  set filter(val) {\n    this._filter = val\n  }\n  get root() {\n    return this.parent?.root || this\n  }\n\n  levels = new Proxy(this._levels, {\n    ownKeys: target =>\n      [\n        ...Object.keys(defaults.levels),\n        ...Object.keys(this.parent?.levels || {}),\n        ...Reflect.ownKeys(target),\n      ].filter(unique),\n    getOwnPropertyDescriptor: (target, key) => ({\n      value: target[key],\n      enumerable: true,\n      configurable: true,\n    }),\n    get: (target, prop) =>\n      target[prop] ||\n      target.default ||\n      this.parent?.levels[prop] ||\n      this.parent?.levels.default ||\n      defaults.levels[prop] ||\n      defaults.levels.default,\n    set: (target, prop, value) => (target[prop] = value),\n  })\n\n  createChild(...prefix) {\n    const child = createLogger(...this.prefix, ...prefix)\n    child.parent = this\n    return child\n  }\n\n  createParent(...prefix) {\n    return createLogger(...prefix, ...this.prefix)\n  }\n\n  create = createLogger\n}\n\n/**\n * @callback PrefixFn\n * @param {string} method console method, eg. log, debug etc...\n */\n\n/** @typedef {Consolite & Console} ConsoliteLogger */\n\n/**\n * @param {(string|PrefixFn)[]} prefix\n * @returns {ConsoliteLogger}\n */\nexport const createLogger = (...prefix) => Object.assign(new Consolite(...prefix))\n","/**\n * @template H\n * @callback AddHookToCollection\n * @param {H} hook\n * @returns {function} unhook\n **/\n\nimport { runOnce } from \"./util.mjs\";\n\n/**\n * @template H\n * @typedef {AddHookToCollection<H> & HooksCollectionProps<H>} HooksCollection\n */\n\n/**\n * @template H hook\n * @typedef {Object} HooksCollectionProps\n * @prop {H} run\n * @prop {H} runOnce\n * @prop {H[]} hooks\n */\n\n/**\n * @template  V\n * @callback Runner\n * @param {HookCb<V>[]} value\n * @param  {...any} rest\n */\n\n/**\n * @template T\n * @callback HookCb\n * @param {T} value\n * @param {...any} rest\n */\n\n/**\n * creates a hook collection\n * @template T\n * @param {Runner<T>} runner\n * @return {HooksCollection<HookCb<T>>}\n * @example\n * const hooksCollection = createHook()\n * const unhookFn = hooksCollection(x => console.log('hello', x))\n * const unhookFn2 = hooksCollection(x => console.log('goodbye', x))\n *\n * // call hooks\n * hooksCollection.hooks.forEach(hook => hook('Jake'))\n * // logs \"hello Jake\" and \"goodbye Jake\"\n *\n * // unregister\n * unhookFn()\n * unhookFn2()\n */\nconst createHooksCollection = (runner) => {\n  /** @type {HookCb<T>[]} */\n  const hooks = [];\n\n  /**\n   *@type {HooksCollection<HookCb<T>>}\n   */\n  const hooksCollection = (hook) => {\n    hooks.push(hook);\n    return () => hooks.splice(hooks.indexOf(hook), 1);\n  };\n\n  hooksCollection.hooks = hooks;\n  hooksCollection.run = runner(hooks);\n  hooksCollection.runOnce = runOnce(runner(hooks));\n\n  return hooksCollection;\n};\n\n/**\n * @template P\n * @typedef {HooksCollection<(pri: P, ...rest)=>P>} CollectionSync\n */\n/**\n * @template P\n * @typedef {HooksCollection<(pri: P, ...rest)=>P|Promise<P>>} CollectionAsync\n */\n/**\n * @template P\n * @typedef {HooksCollection<((pri: P, ...rest)=>void)>} CollectionSyncVoid\n */\n/**\n * @template P\n * @typedef {HooksCollection<(pri: P, ...rest)=>void|Promise<void>>} CollectionAsyncVoid\n */\n\n/**\n * @template T\n * @param {T=} type\n * @returns {HooksCollection<T>}\n */\nexport const createPipelineCollection = (type) =>\n  // @ts-ignore\n  createHooksCollection(\n    (hooks) =>\n      (value, ...rest) =>\n        hooks.reduce(\n          (pipedValue, hook) =>\n            pipedValue?.then ? pipedValue.then((r) => hook(r, ...rest)) : hook(pipedValue, ...rest),\n          value\n        )\n  );\n\n/**\n * @template T\n * @param {T=} type\n * @returns {CollectionSyncVoid<T>|CollectionAsyncVoid<T>}\n */\nexport const createSequenceHooksCollection = (type) =>\n  createHooksCollection(\n    (hooks) =>\n      (value, ...rest) =>\n        hooks.reduce(\n          (last, hook) => (last?.then ? last.then((_) => hook(value, ...rest)) : hook(value, ...rest)),\n          value\n        )\n  );\n\n/**\n * @template T\n * @param {T=} type\n * @returns {CollectionSyncVoid<T>|CollectionAsyncVoid<T>}\n */\nexport const createParallelHooksCollection = (type) =>\n  createHooksCollection(\n    (hooks) =>\n      (value, ...rest) =>\n        Promise.all(hooks.map((hook) => hook(value, ...rest))).then((r) => value)\n  );\n\n/**\n * @template T\n * @param {T=} type\n * @returns {CollectionSync<T>|CollectionAsync<T>}\n */\nexport const createGuardsCollection = (type) =>\n  // @ts-ignore\n  createHooksCollection(\n    (hooks) =>\n      (value, ...rest) =>\n        hooks.reduce(\n          (pipedValue, hook) =>\n            pipedValue?.then ? pipedValue.then((r) => r && hook(value, ...rest)) : pipedValue && hook(value, ...rest),\n          value || true\n        )\n  );\n","/**\n * @template {function} CB\n * @param {CB} cb\n * @returns {CB}\n */\nexport const runOnce = (cb) => {\n  let hasRun;\n\n  /** @type {unknown} */\n  const wrapper = (...params) => {\n    if (hasRun) return;\n    hasRun = true;\n    return cb(...params);\n  };\n\n  return /** @type {CB} */ (wrapper);\n};\n","/* eslint-env browser */\n\nimport { createProxy, hasFatalError } from './proxy.js'\n\nconst logPrefix = '[HMR:Svelte]'\n\n// eslint-disable-next-line no-console\nconst log = (...args) => console.log(logPrefix, ...args)\n\nconst domReload = () => {\n  // eslint-disable-next-line no-undef\n  const win = typeof window !== 'undefined' && window\n  if (win && win.location && win.location.reload) {\n    log('Reload')\n    win.location.reload()\n  } else {\n    log('Full reload required')\n  }\n}\n\nconst replaceCss = (previousId, newId) => {\n  if (typeof document === 'undefined') return false\n  if (!previousId) return false\n  if (!newId) return false\n  // svelte-xxx-style => svelte-xxx\n  const previousClass = previousId.slice(0, -6)\n  const newClass = newId.slice(0, -6)\n  // eslint-disable-next-line no-undef\n  document.querySelectorAll('.' + previousClass).forEach(el => {\n    el.classList.remove(previousClass)\n    el.classList.add(newClass)\n  })\n  return true\n}\n\nconst removeStylesheet = cssId => {\n  if (cssId == null) return\n  if (typeof document === 'undefined') return\n  // eslint-disable-next-line no-undef\n  const el = document.getElementById(cssId)\n  if (el) el.remove()\n  return\n}\n\nconst defaultArgs = {\n  reload: domReload,\n}\n\nexport const makeApplyHmr = transformArgs => args => {\n  const allArgs = transformArgs({ ...defaultArgs, ...args })\n  return applyHmr(allArgs)\n}\n\nlet needsReload = false\n\nfunction applyHmr(args) {\n  const {\n    id,\n    cssId,\n    nonCssHash,\n    reload = domReload,\n    // normalized hot API (must conform to rollup-plugin-hot)\n    hot,\n    hotOptions,\n    Component,\n    acceptable, // some types of components are impossible to HMR correctly\n    preserveLocalState,\n    ProxyAdapter,\n    emitCss,\n  } = args\n\n  const existing = hot.data && hot.data.record\n\n  const canAccept = acceptable && (!existing || existing.current.canAccept)\n\n  const r =\n    existing ||\n    createProxy({\n      Adapter: ProxyAdapter,\n      id,\n      Component,\n      hotOptions,\n      canAccept,\n      preserveLocalState,\n    })\n\n  const cssOnly =\n    hotOptions.injectCss &&\n    existing &&\n    nonCssHash &&\n    existing.current.nonCssHash === nonCssHash\n\n  r.update({\n    Component,\n    hotOptions,\n    canAccept,\n    nonCssHash,\n    cssId,\n    previousCssId: r.current.cssId,\n    cssOnly,\n    preserveLocalState,\n  })\n\n  hot.dispose(data => {\n    // handle previous fatal errors\n    if (needsReload || hasFatalError()) {\n      if (hotOptions && hotOptions.noReload) {\n        log('Full reload required')\n      } else {\n        reload()\n      }\n    }\n\n    // 2020-09-21 Snowpack master doesn't pass data as arg to dispose handler\n    data = data || hot.data\n\n    data.record = r\n\n    if (!emitCss && cssId && r.current.cssId !== cssId) {\n      if (hotOptions.cssEjectDelay) {\n        setTimeout(() => removeStylesheet(cssId), hotOptions.cssEjectDelay)\n      } else {\n        removeStylesheet(cssId)\n      }\n    }\n  })\n\n  if (canAccept) {\n    hot.accept(async arg => {\n      const { bubbled } = arg || {}\n\n      // NOTE Snowpack registers accept handlers only once, so we can NOT rely\n      // on the surrounding scope variables -- they're not the last version!\n      const { cssId: newCssId, previousCssId } = r.current\n      const cssChanged = newCssId !== previousCssId\n      // ensure old style sheet has been removed by now\n      if (!emitCss && cssChanged) removeStylesheet(previousCssId)\n      // guard: css only change\n      if (\n        // NOTE bubbled is provided only by rollup-plugin-hot, and we\n        // can't safely assume a CSS only change without it... this means we\n        // can't support CSS only injection with Nollup or Webpack currently\n        bubbled === false && // WARNING check false, not falsy!\n        r.current.cssOnly &&\n        (!cssChanged || replaceCss(previousCssId, newCssId))\n      ) {\n        return\n      }\n\n      const success = await r.reload()\n\n      if (hasFatalError() || (!success && !hotOptions.optimistic)) {\n        needsReload = true\n      }\n    })\n  }\n\n  // well, endgame... we won't be able to render next updates, even successful,\n  // if we don't have proxies in svelte's tree\n  //\n  // since we won't return the proxy and the app will expect a svelte component,\n  // it's gonna crash... so it's best to report the real cause\n  //\n  // full reload required\n  //\n  const proxyOk = r && r.proxy\n  if (!proxyOk) {\n    throw new Error(`Failed to create HMR proxy for Svelte component ${id}`)\n  }\n\n  return r.proxy\n}\n","export { makeApplyHmr } from './hot-api.js'\n","/* eslint-env browser */\n\nconst removeElement = el => el && el.parentNode && el.parentNode.removeChild(el)\n\nconst ErrorOverlay = () => {\n  let errors = []\n  let compileError = null\n\n  const errorsTitle = 'Failed to init component'\n  const compileErrorTitle = 'Failed to compile'\n\n  const style = {\n    section: `\n      position: fixed;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      padding: 32px;\n      background: rgba(0, 0, 0, .85);\n      font-family: Menlo, Consolas, monospace;\n      font-size: large;\n      color: rgb(232, 232, 232);\n      overflow: auto;\n      z-index: 2147483647;\n    `,\n    h1: `\n      margin-top: 0;\n      color: #E36049;\n      font-size: large;\n      font-weight: normal;\n    `,\n    h2: `\n      margin: 32px 0 0;\n      font-size: large;\n      font-weight: normal;\n    `,\n    pre: ``,\n  }\n\n  const createOverlay = () => {\n    const h1 = document.createElement('h1')\n    h1.style = style.h1\n    const section = document.createElement('section')\n    section.appendChild(h1)\n    section.style = style.section\n    const body = document.createElement('div')\n    section.appendChild(body)\n    return { h1, el: section, body }\n  }\n\n  const setTitle = title => {\n    overlay.h1.textContent = title\n  }\n\n  const show = () => {\n    const { el } = overlay\n    if (!el.parentNode) {\n      const target = document.body\n      target.appendChild(overlay.el)\n    }\n  }\n\n  const hide = () => {\n    const { el } = overlay\n    if (el.parentNode) {\n      overlay.el.remove()\n    }\n  }\n\n  const update = () => {\n    if (compileError) {\n      overlay.body.innerHTML = ''\n      setTitle(compileErrorTitle)\n      const errorEl = renderError(compileError)\n      overlay.body.appendChild(errorEl)\n      show()\n    } else if (errors.length > 0) {\n      overlay.body.innerHTML = ''\n      setTitle(errorsTitle)\n      errors.forEach(({ title, message }) => {\n        const errorEl = renderError(message, title)\n        overlay.body.appendChild(errorEl)\n      })\n      show()\n    } else {\n      hide()\n    }\n  }\n\n  const renderError = (message, title) => {\n    const div = document.createElement('div')\n    if (title) {\n      const h2 = document.createElement('h2')\n      h2.textContent = title\n      h2.style = style.h2\n      div.appendChild(h2)\n    }\n    const pre = document.createElement('pre')\n    pre.textContent = message\n    div.appendChild(pre)\n    return div\n  }\n\n  const addError = (error, title) => {\n    const message = (error && error.stack) || error\n    errors.push({ title, message })\n    update()\n  }\n\n  const clearErrors = () => {\n    errors.forEach(({ element }) => {\n      removeElement(element)\n    })\n    errors = []\n    update()\n  }\n\n  const setCompileError = message => {\n    compileError = message\n    update()\n  }\n\n  const overlay = createOverlay()\n\n  return {\n    addError,\n    clearErrors,\n    setCompileError,\n  }\n}\n\nexport default ErrorOverlay\n","/* global window, document */\nimport * as svelteInternal from 'svelte/internal'\n// NOTE from 3.38.3 (or so), insert was carrying the hydration logic, that must\n// be used because DOM elements are reused more (and so insertion points are not\n// necessarily added in order); then in 3.40 the logic was moved to\n// insert_hydration, which is the one we must use for HMR\nconst svelteInsert = svelteInternal.insert_hydration || svelteInternal.insert\nif (!svelteInsert) {\n  throw new Error(\n    'failed to find insert_hydration and insert in svelte/internal'\n  )\n}\n\nimport ErrorOverlay from './overlay.js'\n\nconst removeElement = el => el && el.parentNode && el.parentNode.removeChild(el)\n\nexport const adapter = class ProxyAdapterDom {\n  constructor(instance) {\n    this.instance = instance\n    this.insertionPoint = null\n\n    this.afterMount = this.afterMount.bind(this)\n    this.rerender = this.rerender.bind(this)\n\n    this._noOverlay = !!instance.hotOptions.noOverlay\n  }\n\n  // NOTE overlay is only created before being actually shown to help test\n  // runner (it won't have to account for error overlay when running assertions\n  // about the contents of the rendered page)\n  static getErrorOverlay(noCreate = false) {\n    if (!noCreate && !this.errorOverlay) {\n      this.errorOverlay = ErrorOverlay()\n    }\n    return this.errorOverlay\n  }\n\n  // TODO this is probably unused now: remove in next breaking release\n  static renderCompileError(message) {\n    const noCreate = !message\n    const overlay = this.getErrorOverlay(noCreate)\n    if (!overlay) return\n    overlay.setCompileError(message)\n  }\n\n  dispose() {\n    // Component is being destroyed, detaching is not optional in Svelte3's\n    // component API, so we can dispose of the insertion point in every case.\n    if (this.insertionPoint) {\n      removeElement(this.insertionPoint)\n      this.insertionPoint = null\n    }\n    this.clearError()\n  }\n\n  // NOTE afterMount CAN be called multiple times (e.g. keyed list)\n  afterMount(target, anchor) {\n    const {\n      instance: { debugName },\n    } = this\n    if (!this.insertionPoint) {\n      this.insertionPoint = document.createComment(debugName)\n    }\n    svelteInsert(target, this.insertionPoint, anchor)\n  }\n\n  rerender() {\n    this.clearError()\n    const {\n      instance: { refreshComponent },\n      insertionPoint,\n    } = this\n    if (!insertionPoint) {\n      throw new Error('Cannot rerender: missing insertion point')\n    }\n    refreshComponent(insertionPoint.parentNode, insertionPoint)\n  }\n\n  renderError(err) {\n    if (this._noOverlay) return\n    const {\n      instance: { debugName },\n    } = this\n    const title = debugName || err.moduleName || 'Error'\n    this.constructor.getErrorOverlay().addError(err, title)\n  }\n\n  clearError() {\n    if (this._noOverlay) return\n    const overlay = this.constructor.getErrorOverlay(true)\n    if (!overlay) return\n    overlay.clearErrors()\n  }\n}\n\n// TODO this is probably unused now: remove in next breaking release\nif (typeof window !== 'undefined') {\n  window.__SVELTE_HMR_ADAPTER = adapter\n}\n\n// mitigate situation with Snowpack remote source pulling latest of runtime,\n// but using previous version of the Node code transform in the plugin\n// see: https://github.com/rixo/svelte-hmr/issues/27\nexport default adapter\n","/* eslint-env browser */\n/**\n * The HMR proxy is a component-like object whose task is to sit in the\n * component tree in place of the proxied component, and rerender each\n * successive versions of said component.\n */\n\nimport { createProxiedComponent } from './svelte-hooks.js'\n\nconst handledMethods = ['constructor', '$destroy']\nconst forwardedMethods = ['$set', '$on']\n\nconst logError = (msg, err) => {\n  // eslint-disable-next-line no-console\n  console.error('[HMR][Svelte]', msg)\n  if (err) {\n    // NOTE avoid too much wrapping around user errors\n    // eslint-disable-next-line no-console\n    console.error(err)\n  }\n}\n\nconst posixify = file => file.replace(/[/\\\\]/g, '/')\n\nconst getBaseName = id =>\n  id\n    .split('/')\n    .pop()\n    .split('.')\n    .slice(0, -1)\n    .join('.')\n\nconst capitalize = str => str[0].toUpperCase() + str.slice(1)\n\nconst getFriendlyName = id => capitalize(getBaseName(posixify(id)))\n\nconst getDebugName = id => `<${getFriendlyName(id)}>`\n\nconst relayCalls = (getTarget, names, dest = {}) => {\n  for (const key of names) {\n    dest[key] = function(...args) {\n      const target = getTarget()\n      if (!target) {\n        return\n      }\n      return target[key] && target[key].call(this, ...args)\n    }\n  }\n  return dest\n}\n\nconst isInternal = key => key !== '$$' && key.slice(0, 2) === '$$'\n\n// This is intented as a somewhat generic / prospective fix to the situation\n// that arised with the introduction of $$set in Svelte 3.24.1 -- trying to\n// avoid giving full knowledge (like its name) of this implementation detail\n// to the proxy. The $$set method can be present or not on the component, and\n// its presence impacts the behaviour (but with HMR it will be tested if it is\n// present _on the proxy_). So the idea here is to expose exactly the same $$\n// props as the current version of the component and, for those that are\n// functions, proxy the calls to the current component.\nconst relayInternalMethods = (proxy, cmp) => {\n  // delete any previously added $$ prop\n  Object.keys(proxy)\n    .filter(isInternal)\n    .forEach(key => {\n      delete proxy[key]\n    })\n  // guard: no component\n  if (!cmp) return\n  // proxy current $$ props to the actual component\n  Object.keys(cmp)\n    .filter(isInternal)\n    .forEach(key => {\n      Object.defineProperty(proxy, key, {\n        configurable: true,\n        get() {\n          const value = cmp[key]\n          if (typeof value !== 'function') return value\n          return (\n            value &&\n            function(...args) {\n              return value.apply(this, args)\n            }\n          )\n        },\n      })\n    })\n}\n\n// proxy custom methods\nconst copyComponentProperties = (proxy, cmp, previous) => {\n  if (previous) {\n    previous.forEach(prop => {\n      delete proxy[prop]\n    })\n  }\n\n  const props = Object.getOwnPropertyNames(Object.getPrototypeOf(cmp))\n  const wrappedProps = props.filter(prop => {\n    if (!handledMethods.includes(prop) && !forwardedMethods.includes(prop)) {\n      Object.defineProperty(proxy, prop, {\n        configurable: true,\n        get() {\n          return cmp[prop]\n        },\n        set(value) {\n          // we're changing it on the real component first to see what it\n          // gives... if it throws an error, we want to throw the same error in\n          // order to most closely follow non-hmr behaviour.\n          cmp[prop] = value\n        },\n      })\n      return true\n    }\n  })\n\n  return wrappedProps\n}\n\n// everything in the constructor!\n//\n// so we don't polute the component class with new members\n//\nclass ProxyComponent {\n  constructor(\n    {\n      Adapter,\n      id,\n      debugName,\n      current, // { Component, hotOptions: { preserveLocalState, ... } }\n      register,\n    },\n    options // { target, anchor, ... }\n  ) {\n    let cmp\n    let disposed = false\n    let lastError = null\n\n    const setComponent = _cmp => {\n      cmp = _cmp\n      relayInternalMethods(this, cmp)\n    }\n\n    const getComponent = () => cmp\n\n    const destroyComponent = () => {\n      // destroyComponent is tolerant (don't crash on no cmp) because it\n      // is possible that reload/rerender is called after a previous\n      // createComponent has failed (hence we have a proxy, but no cmp)\n      if (cmp) {\n        cmp.$destroy()\n        setComponent(null)\n      }\n    }\n\n    const refreshComponent = (target, anchor, conservativeDestroy) => {\n      if (lastError) {\n        lastError = null\n        adapter.rerender()\n      } else {\n        try {\n          const replaceOptions = {\n            target,\n            anchor,\n            preserveLocalState: current.preserveLocalState,\n          }\n          if (conservativeDestroy) {\n            replaceOptions.conservativeDestroy = true\n          }\n          cmp.$replace(current.Component, replaceOptions)\n        } catch (err) {\n          setError(err, target, anchor)\n          if (\n            !current.hotOptions.optimistic ||\n            // non acceptable components (that is components that have to defer\n            // to their parent for rerender -- e.g. accessors, named exports)\n            // are most tricky, and they havent been considered when most of the\n            // code has been written... as a result, they are especially tricky\n            // to deal with, it's better to consider any error with them to be\n            // fatal to avoid odities\n            !current.canAccept ||\n            (err && err.hmrFatal)\n          ) {\n            throw err\n          } else {\n            // const errString = String((err && err.stack) || err)\n            logError(`Error during component init: ${debugName}`, err)\n          }\n        }\n      }\n    }\n\n    const setError = err => {\n      lastError = err\n      adapter.renderError(err)\n    }\n\n    const instance = {\n      hotOptions: current.hotOptions,\n      proxy: this,\n      id,\n      debugName,\n      refreshComponent,\n    }\n\n    const adapter = new Adapter(instance)\n\n    const { afterMount, rerender } = adapter\n\n    // $destroy is not called when a child component is disposed, so we\n    // need to hook from fragment.\n    const onDestroy = () => {\n      // NOTE do NOT call $destroy on the cmp from here; the cmp is already\n      //   dead, this would not work\n      if (!disposed) {\n        disposed = true\n        adapter.dispose()\n        unregister()\n      }\n    }\n\n    // ---- register proxy instance ----\n\n    const unregister = register(rerender)\n\n    // ---- augmented methods ----\n\n    this.$destroy = () => {\n      destroyComponent()\n      onDestroy()\n    }\n\n    // ---- forwarded methods ----\n\n    relayCalls(getComponent, forwardedMethods, this)\n\n    // ---- create & mount target component instance ---\n\n    try {\n      let lastProperties\n      createProxiedComponent(current.Component, options, {\n        allowLiveBinding: current.hotOptions.allowLiveBinding,\n        onDestroy,\n        onMount: afterMount,\n        onInstance: comp => {\n          setComponent(comp)\n          // WARNING the proxy MUST use the same $$ object as its component\n          // instance, because a lot of wiring happens during component\n          // initialisation... lots of references to $$ and $$.fragment have\n          // already been distributed around when the component constructor\n          // returns, before we have a chance to wrap them (and so we can't\n          // wrap them no more, because existing references would become\n          // invalid)\n          this.$$ = comp.$$\n          lastProperties = copyComponentProperties(this, comp, lastProperties)\n        },\n      })\n    } catch (err) {\n      const { target, anchor } = options\n      setError(err, target, anchor)\n      throw err\n    }\n  }\n}\n\nconst syncStatics = (component, proxy, previousKeys) => {\n  // remove previously copied keys\n  if (previousKeys) {\n    for (const key of previousKeys) {\n      delete proxy[key]\n    }\n  }\n\n  // forward static properties and methods\n  const keys = []\n  for (const key in component) {\n    keys.push(key)\n    proxy[key] = component[key]\n  }\n\n  return keys\n}\n\nconst globalListeners = {}\n\nconst onGlobal = (event, fn) => {\n  event = event.toLowerCase()\n  if (!globalListeners[event]) globalListeners[event] = []\n  globalListeners[event].push(fn)\n}\n\nconst fireGlobal = (event, ...args) => {\n  const listeners = globalListeners[event]\n  if (!listeners) return\n  for (const fn of listeners) {\n    fn(...args)\n  }\n}\n\nconst fireBeforeUpdate = () => fireGlobal('beforeupdate')\n\nconst fireAfterUpdate = () => fireGlobal('afterupdate')\n\nif (typeof window !== 'undefined') {\n  window.__SVELTE_HMR = {\n    on: onGlobal,\n  }\n  window.dispatchEvent(new CustomEvent('svelte-hmr:ready'))\n}\n\nlet fatalError = false\n\nexport const hasFatalError = () => fatalError\n\n/**\n * Creates a HMR proxy and its associated `reload` function that pushes a new\n * version to all existing instances of the component.\n */\nexport function createProxy({\n  Adapter,\n  id,\n  Component,\n  hotOptions,\n  canAccept,\n  preserveLocalState,\n}) {\n  const debugName = getDebugName(id)\n  const instances = []\n\n  // current object will be updated, proxy instances will keep a ref\n  const current = {\n    Component,\n    hotOptions,\n    canAccept,\n    preserveLocalState,\n  }\n\n  const name = `Proxy${debugName}`\n\n  // this trick gives the dynamic name Proxy<MyComponent> to the concrete\n  // proxy class... unfortunately, this doesn't shows in dev tools, but\n  // it stills allow to inspect cmp.constructor.name to confirm an instance\n  // is a proxy\n  const proxy = {\n    [name]: class extends ProxyComponent {\n      constructor(options) {\n        try {\n          super(\n            {\n              Adapter,\n              id,\n              debugName,\n              current,\n              register: rerender => {\n                instances.push(rerender)\n                const unregister = () => {\n                  const i = instances.indexOf(rerender)\n                  instances.splice(i, 1)\n                }\n                return unregister\n              },\n            },\n            options\n          )\n        } catch (err) {\n          // If we fail to create a proxy instance, any instance, that means\n          // that we won't be able to fix this instance when it is updated.\n          // Recovering to normal state will be impossible. HMR's dead.\n          //\n          // Fatal error will trigger a full reload on next update (reloading\n          // right now is kinda pointless since buggy code still exists).\n          //\n          // NOTE Only report first error to avoid too much polution -- following\n          // errors are probably caused by the first one, or they will show up\n          // in turn when the first one is fixed ¯\\_(ツ)_/¯\n          //\n          if (!fatalError) {\n            fatalError = true\n            logError(\n              `Unrecoverable HMR error in ${debugName}: ` +\n                `next update will trigger a full reload`\n            )\n          }\n          throw err\n        }\n      }\n    },\n  }[name]\n\n  // initialize static members\n  let previousStatics = syncStatics(current.Component, proxy)\n\n  const update = newState => Object.assign(current, newState)\n\n  // reload all existing instances of this component\n  const reload = () => {\n    fireBeforeUpdate()\n\n    // copy statics before doing anything because a static prop/method\n    // could be used somewhere in the create/render call\n    previousStatics = syncStatics(current.Component, proxy, previousStatics)\n\n    const errors = []\n\n    instances.forEach(rerender => {\n      try {\n        rerender()\n      } catch (err) {\n        logError(`Failed to rerender ${debugName}`, err)\n        errors.push(err)\n      }\n    })\n\n    if (errors.length > 0) {\n      return false\n    }\n\n    fireAfterUpdate()\n\n    return true\n  }\n\n  const hasFatalError = () => fatalError\n\n  return { id, proxy, update, reload, hasFatalError, current }\n}\n","/**\n * Emulates forthcoming HMR hooks in Svelte.\n *\n * All references to private component state ($$) are now isolated in this\n * module.\n */\nimport {\n  current_component,\n  get_current_component,\n  set_current_component,\n} from 'svelte/internal'\n\nconst captureState = cmp => {\n  // sanity check: propper behaviour here is to crash noisily so that\n  // user knows that they're looking at something broken\n  if (!cmp) {\n    throw new Error('Missing component')\n  }\n  if (!cmp.$$) {\n    throw new Error('Invalid component')\n  }\n\n  const {\n    $$: { callbacks, bound, ctx, props },\n  } = cmp\n\n  const state = cmp.$capture_state()\n\n  // capturing current value of props (or we'll recreate the component with the\n  // initial prop values, that may have changed -- and would not be reflected in\n  // options.props)\n  const hmr_props_values = {}\n  Object.keys(cmp.$$.props).forEach(prop => {\n    hmr_props_values[prop] = ctx[props[prop]]\n  })\n\n  return {\n    ctx,\n    props,\n    callbacks,\n    bound,\n    state,\n    hmr_props_values,\n  }\n}\n\n// remapping all existing bindings (including hmr_future_foo ones) to the\n// new version's props indexes, and refresh them with the new value from\n// context\nconst restoreBound = (cmp, restore) => {\n  // reverse prop:ctxIndex in $$.props to ctxIndex:prop\n  //\n  // ctxIndex can be either a regular index in $$.ctx or a hmr_future_ prop\n  //\n  const propsByIndex = {}\n  for (const [name, i] of Object.entries(restore.props)) {\n    propsByIndex[i] = name\n  }\n\n  // NOTE $$.bound cannot change in the HMR lifetime of a component, because\n  //      if bindings changes, that means the parent component has changed,\n  //      which means the child (current) component will be wholly recreated\n  for (const [oldIndex, updateBinding] of Object.entries(restore.bound)) {\n    // can be either regular prop, or future_hmr_ prop\n    const propName = propsByIndex[oldIndex]\n\n    // this should never happen if remembering of future props is enabled...\n    // in any case, there's nothing we can do about it if we have lost prop\n    // name knowledge at this point\n    if (propName == null) continue\n\n    // NOTE $$.props[propName] also propagates knowledge of a possible\n    //      future prop to the new $$.props (via $$.props being a Proxy)\n    const newIndex = cmp.$$.props[propName]\n    cmp.$$.bound[newIndex] = updateBinding\n\n    // NOTE if the prop doesn't exist or doesn't exist anymore in the new\n    //      version of the component, clearing the binding is the expected\n    //      behaviour (since that's what would happen in non HMR code)\n    const newValue = cmp.$$.ctx[newIndex]\n    updateBinding(newValue)\n  }\n}\n\n// restoreState\n//\n// It is too late to restore context at this point because component instance\n// function has already been called (and so context has already been read).\n// Instead, we rely on setting current_component to the same value it has when\n// the component was first rendered -- which fix support for context, and is\n// also generally more respectful of normal operation.\n//\nconst restoreState = (cmp, restore) => {\n  if (!restore) return\n\n  if (restore.callbacks) {\n    cmp.$$.callbacks = restore.callbacks\n  }\n\n  if (restore.bound) {\n    restoreBound(cmp, restore)\n  }\n\n  // props, props.$$slots are restored at component creation (works\n  // better -- well, at all actually)\n}\n\nconst get_current_component_safe = () => {\n  // NOTE relying on dynamic bindings (current_component) makes us dependent on\n  // bundler config (and apparently it does not work in demo-svelte-nollup)\n  try {\n    // unfortunately, unlike current_component, get_current_component() can\n    // crash in the normal path (when there is really no parent)\n    return get_current_component()\n  } catch (err) {\n    // ... so we need to consider that this error means that there is no parent\n    //\n    // that makes us tightly coupled to the error message but, at least, we\n    // won't mute an unexpected error, which is quite a horrible thing to do\n    if (err.message === 'Function called outside component initialization') {\n      // who knows...\n      return current_component\n    } else {\n      throw err\n    }\n  }\n}\n\nexport const createProxiedComponent = (\n  Component,\n  initialOptions,\n  { allowLiveBinding, onInstance, onMount, onDestroy }\n) => {\n  let cmp\n  let options = initialOptions\n\n  const isCurrent = _cmp => cmp === _cmp\n\n  const assignOptions = (target, anchor, restore, preserveLocalState) => {\n    const props = Object.assign({}, options.props)\n\n    // Filtering props to avoid \"unexpected prop\" warning\n    // NOTE this is based on props present in initial options, but it should\n    //      always works, because props that are passed from the parent can't\n    //      change without a code change to the parent itself -- hence, the\n    //      child component will be fully recreated, and initial options should\n    //      always represent props that are currnetly passed by the parent\n    if (options.props && restore.hmr_props_values) {\n      for (const prop of Object.keys(options.props)) {\n        if (restore.hmr_props_values.hasOwnProperty(prop)) {\n          props[prop] = restore.hmr_props_values[prop]\n        }\n      }\n    }\n\n    if (preserveLocalState && restore.state) {\n      if (Array.isArray(preserveLocalState)) {\n        // form ['a', 'b'] => preserve only 'a' and 'b'\n        props.$$inject = {}\n        for (const key of preserveLocalState) {\n          props.$$inject[key] = restore.state[key]\n        }\n      } else {\n        props.$$inject = restore.state\n      }\n    } else {\n      delete props.$$inject\n    }\n    options = Object.assign({}, initialOptions, {\n      target,\n      anchor,\n      props,\n      hydrate: false,\n    })\n  }\n\n  // Preserving knowledge of \"future props\" -- very hackish version (maybe\n  // there should be an option to opt out of this)\n  //\n  // The use case is bind:something where something doesn't exist yet in the\n  // target component, but comes to exist later, after a HMR update.\n  //\n  // If Svelte can't map a prop in the current version of the component, it\n  // will just completely discard it:\n  // https://github.com/sveltejs/svelte/blob/1632bca34e4803d6b0e0b0abd652ab5968181860/src/runtime/internal/Component.ts#L46\n  //\n  const rememberFutureProps = cmp => {\n    if (typeof Proxy === 'undefined') return\n\n    cmp.$$.props = new Proxy(cmp.$$.props, {\n      get(target, name) {\n        if (target[name] === undefined) {\n          target[name] = 'hmr_future_' + name\n        }\n        return target[name]\n      },\n      set(target, name, value) {\n        target[name] = value\n      },\n    })\n  }\n\n  const instrument = targetCmp => {\n    const createComponent = (Component, restore, previousCmp) => {\n      set_current_component(parentComponent || previousCmp)\n      const comp = new Component(options)\n      // NOTE must be instrumented before restoreState, because restoring\n      // bindings relies on hacked $$.props\n      instrument(comp)\n      restoreState(comp, restore)\n      return comp\n    }\n\n    rememberFutureProps(targetCmp)\n\n    targetCmp.$$.on_hmr = []\n\n    // `conservative: true` means we want to be sure that the new component has\n    // actually been successfuly created before destroying the old instance.\n    // This could be useful for preventing runtime errors in component init to\n    // bring down the whole HMR. Unfortunately the implementation bellow is\n    // broken (FIXME), but that remains an interesting target for when HMR hooks\n    // will actually land in Svelte itself.\n    //\n    // The goal would be to render an error inplace in case of error, to avoid\n    // losing the navigation stack (especially annoying in native, that is not\n    // based on URL navigation, so we lose the current page on each error).\n    //\n    targetCmp.$replace = (\n      Component,\n      {\n        target = options.target,\n        anchor = options.anchor,\n        preserveLocalState,\n        conservative = false,\n      }\n    ) => {\n      const restore = captureState(targetCmp)\n      assignOptions(\n        target || options.target,\n        anchor,\n        restore,\n        preserveLocalState\n      )\n\n      const callbacks = cmp ? cmp.$$.on_hmr : []\n\n      const afterCallbacks = callbacks.map(fn => fn(cmp)).filter(Boolean)\n\n      const previous = cmp\n      if (conservative) {\n        try {\n          const next = createComponent(Component, restore, previous)\n          // prevents on_destroy from firing on non-final cmp instance\n          cmp = null\n          previous.$destroy()\n          cmp = next\n        } catch (err) {\n          cmp = previous\n          throw err\n        }\n      } else {\n        // prevents on_destroy from firing on non-final cmp instance\n        cmp = null\n        if (previous) {\n          // previous can be null if last constructor has crashed\n          previous.$destroy()\n        }\n        cmp = createComponent(Component, restore, cmp)\n      }\n\n      cmp.$$.hmr_cmp = cmp\n\n      for (const fn of afterCallbacks) {\n        fn(cmp)\n      }\n\n      cmp.$$.on_hmr = callbacks\n\n      return cmp\n    }\n\n    // NOTE onMount must provide target & anchor (for us to be able to determinate\n    // \t\t\tactual DOM insertion point)\n    //\n    // \t\t\tAnd also, to support keyed list, it needs to be called each time the\n    // \t\t\tcomponent is moved (same as $$.fragment.m)\n    if (onMount) {\n      const m = targetCmp.$$.fragment.m\n      targetCmp.$$.fragment.m = (...args) => {\n        const result = m(...args)\n        onMount(...args)\n        return result\n      }\n    }\n\n    // NOTE onDestroy must be called even if the call doesn't pass through the\n    //      component's $destroy method (that we can hook onto by ourselves, since\n    //      it's public API) -- this happens a lot in svelte's internals, that\n    //      manipulates cmp.$$.fragment directly, often binding to fragment.d,\n    //      for example\n    if (onDestroy) {\n      targetCmp.$$.on_destroy.push(() => {\n        if (isCurrent(targetCmp)) {\n          onDestroy()\n        }\n      })\n    }\n\n    if (onInstance) {\n      onInstance(targetCmp)\n    }\n\n    // Svelte 3 creates and mount components from their constructor if\n    // options.target is present.\n    //\n    // This means that at this point, the component's `fragment.c` and,\n    // most notably, `fragment.m` will already have been called _from inside\n    // createComponent_. That is: before we have a chance to hook on it.\n    //\n    // Proxy's constructor\n    //   -> createComponent\n    //     -> component constructor\n    //       -> component.$$.fragment.c(...) (or l, if hydrate:true)\n    //       -> component.$$.fragment.m(...)\n    //\n    //   -> you are here <-\n    //\n    if (onMount) {\n      const { target, anchor } = options\n      if (target) {\n        onMount(target, anchor)\n      }\n    }\n  }\n\n  const parentComponent = allowLiveBinding\n    ? current_component\n    : get_current_component_safe()\n\n  cmp = new Component(options)\n  cmp.$$.hmr_cmp = cmp\n\n  instrument(cmp)\n\n  return cmp\n}\n","<script>\n    import { getContext, setContext } from 'svelte'\n    export let node\n    export let passthrough\n    const CTX = 'routify-fragment-context'\n\n    const context = { ...getContext(CTX), node }\n    setContext(CTX, context)\n\n    let Component = node.module?.default\n    if (!Component && node.asyncModule)\n        node.asyncModule().then(r => (Component = r.default))\n</script>\n\n{#if Component}\n    {#if Component}\n        <Component {...passthrough} {context}>\n            <slot />\n        </Component>\n    {/if}\n{:else}\n    <slot />\n{/if}\n","<script>\n    import { Router } from './Router.js'\n    import { onDestroy as _onDestroy } from 'svelte'\n    import { getUrlFromClick } from '../utils/index.js'\n    import Component from '../renderer/ComposeFragments.svelte'\n    import ScrollDecorator from '../decorators/ScrollDecorator.svelte'\n    import { get, writable } from 'svelte/store'\n    import { globalInstance } from '../Global/Global.js'\n\n    /** @type {Router} */\n    export let router = null\n    export let routes = null\n    export let decorator = ScrollDecorator\n\n    /** @type {RoutifyRuntimeOptions['urlReflector']} */\n    export let urlReflector = null\n    /** @type {RoutifyRuntimeOptions['instance']} */\n    export let instance = null\n    /** @type {RoutifyRuntimeOptions['urlRewrite']} */\n    export let urlRewrite = null\n    /** @type {RoutifyRuntimeOptions['url']} */\n    export let url = null\n    /** @type {RoutifyRuntimeOptions['name']} */\n    export let name = null\n    /** @type {RoutifyRuntimeOptions['rootNode']} */\n    export let rootNode = null\n    /** @type {RoutifyRuntimeOptions['passthrough']} */\n    export let passthrough = null\n    /** @type {RoutifyRuntimeOptions['beforeRouterInit']} */\n    export let beforeRouterInit = null\n    /** @type {RoutifyRuntimeOptions['afterRouterInit']} */\n    export let afterRouterInit = null\n    /** @type {RoutifyRuntimeOptions['beforeUrlChange']} */\n    export let beforeUrlChange = null\n    /** @type {RoutifyRuntimeOptions['afterUrlChange']} */\n    export let afterUrlChange = null\n    /** @type {RoutifyRuntimeOptions['transformFragments']} */\n    export let transformFragments = null\n    /** @type {RoutifyRuntimeOptions['onDestroy']} */\n    export let onDestroy = null\n    /** @type {RoutifyRuntimeOptions['plugins']} */\n    export let plugins = null\n    /** @type {RoutifyRuntimeOptions['queryHandler']} */\n    export let queryHandler = null\n\n    const context = { childFragments: writable([]) }\n    const getExistingRouter = name =>\n        globalInstance.routers.find(router => router.name === name)\n\n    $: {\n        /** @type {RoutifyRuntimeOptions}*/\n        const options = {\n            instance,\n            rootNode,\n            name,\n            routes,\n            urlRewrite,\n            urlReflector,\n            passthrough,\n            beforeRouterInit,\n            afterRouterInit,\n            beforeUrlChange,\n            afterUrlChange,\n            transformFragments,\n            onDestroy,\n            plugins,\n            queryHandler,\n        }\n\n        // todo move everything to init\n        if (!router) router = getExistingRouter(options.name) || new Router(options)\n        else router.init(options)\n    }\n    $: if (url && url !== router.url.internal()) router.url.replace(url)\n    $: activeRoute = router.activeRoute\n    $: context.childFragments.set($activeRoute?.fragments || [])\n    $: nodeId = $activeRoute?.fragments[0].node.name\n\n    $: router.log.debug('before render', get(context.childFragments)) // ROUTIFY-DEV-ONLY\n\n    const initialize = elem => {\n        if (!router.passthrough) {\n            elem.addEventListener('click', handleClick)\n            elem.addEventListener('keydown', handleClick)\n        }\n    }\n\n    const handleClick = event => {\n        const url = getUrlFromClick(event)\n        if (url) router.url.push(url)\n    }\n\n    if (typeof window !== 'undefined') _onDestroy(() => router.destroy())\n</script>\n\n<!-- todo fragments should be context obj -->\n\n{#if $activeRoute}\n    <div data-routify={nodeId} style=\"display: contents\" use:initialize>\n        <Component {context} options={{ decorator }} />\n    </div>\n{/if}\n\n{#if !router.parentElem}\n    <div use:router.setParentElem />\n{/if}\n","<script>\n    export let context = null\n    context // need this to avoid warnings\n</script>\n\n<slot />\n","<script context=\"module\">\n    import { scopedScrollIntoView, persistentScrollTo } from '../helpers/scroll.js'\n\n    /** @typedef {{elem: HTMLElement, context: import('../Router/types').RenderContext}} ElementHolder */\n\n    /**\n     * @type {Map<Router, ScrollHandler>}\n     */\n    const scrollHandlers = new Map()\n\n    /** @param {Router} router */\n    const fetchScrollHandler = router => {\n        if (!scrollHandlers.has(router))\n            scrollHandlers.set(router, new ScrollHandler(router))\n        return scrollHandlers.get(router)\n    }\n\n    // todo life cycle scroll to -> persistent scroll to -> watch scroll\n\n    class ScrollHandler {\n        /** @param {Router} router */\n        constructor(router) {\n            this.router = router\n            this.stopPersistent = () => null\n            /** @type {ElementHolder[]} */\n            this.elemHolders = []\n            if (typeof document !== 'undefined')\n                document.addEventListener('scroll', () => this.onScroll())\n        }\n\n        /**\n         * @param {HTMLElement} elem\n         * @param {import('../Router/types').RenderContext} context\n         */\n        registerRenderContext(elem, context) {\n            const elemHolder = { elem, context }\n            this.elemHolders.push(elemHolder)\n            context.onDestroy(() =>\n                this.elemHolders.splice(this.elemHolders.indexOf(elemHolder), 1),\n            )\n        }\n\n        /** @param {HTMLElement} elem */\n        scrollTo(elem, shouldPersist) {\n            setTimeout(async () => {\n                scopedScrollIntoView(elem)\n\n                if (shouldPersist) {\n                    this.stopPersistent() // cancel last scroll\n                    this.stopPersistent = persistentScrollTo(elem, {})\n                    setTimeout(this.stopPersistent, 500)\n                }\n            })\n        }\n\n        onScroll() {\n            const cutoff = window.innerHeight / 3\n            /** @type {ElementHolder}*/\n            let candidateElementHolder\n            let candidateTop = -Infinity\n            for (const elementHolder of this.elemHolders) {\n                const { top } = elementHolder.elem.getBoundingClientRect()\n                if (\n                    cutoff > top &&\n                    (top > candidateTop ||\n                        elementHolder.context.node.ancestors.includes(\n                            candidateElementHolder.context.node,\n                        ))\n                ) {\n                    candidateElementHolder = elementHolder\n                    candidateTop = top\n                }\n            }\n            if (candidateElementHolder) {\n                const { context, elem } = candidateElementHolder\n                if (context.router.activeRoute.get() != context.route)\n                    context.router.url.set(context.node.path, 'replaceState', true, {\n                        // we got to this route by scrolling manually, so we don't want the router to do any scrolling\n                        dontScroll: true,\n                    })\n            }\n        }\n    }\n</script>\n\n<script>\n    /** @type {import('../Router/types').RenderContext} */\n    export let context\n    export let Parent\n\n    const { isActive, single, router, route, node } = context\n    const isLeafFragment = () =>\n        context.route && context.node.id === [...context.route.fragments].pop().node.id\n\n    // assign one scrollHandler per router\n    const scrollHandler = fetchScrollHandler(router)\n\n    /** @type {HTMLElement} */\n    let elem\n\n    $: if ($isActive && elem && !context.route.state.dontScroll && isLeafFragment())\n        scrollHandler.scrollTo(elem, true)\n\n    const init = el => {\n        elem = el\n        scrollHandler.registerRenderContext(elem, context)\n    }\n</script>\n\n<div\n    use:init\n    class=\"decorator-{context.node.id}\"\n    style=\"position: relative; top:-200px\" />\n\n<slot />\n","<script>\n    import { createSequenceHooksCollection } from 'hookar'\n\n    import { writable } from 'svelte/store'\n    import { RouteFragment } from '../Route/RouteFragment'\n    import RenderFragment from './RenderFragment.svelte'\n    import { normalizeMulti } from './utils/normalizeMulti.js'\n\n    /** @type {import('./types').RenderContext}*/\n    export let context = null\n    export let options = {}\n\n    const { childFragments, isActive } = context\n    const { multi, decorator, props } = options\n    let activeContext\n\n    /** @type {import('./utils/index').Multi}*/\n    const setup = normalizeMulti(multi, $childFragments[0]?.node, context)\n\n    /** @type {import('./types').RenderContext[] }*/\n    const childContexts = setup.pages.map(node => ({\n        childFragments: writable([]),\n        node,\n        fragment: new RouteFragment(null, node, null, {}),\n        isActive: writable(false),\n        router: $childFragments[0]?.route.router || context.router,\n        route: null,\n        parentContext: context,\n        onDestroy: createSequenceHooksCollection(),\n        decorators: [context?.decorators, decorator].flat().filter(Boolean),\n        single: writable(setup.single),\n    }))\n\n    // if parent changes status to inactive, so does children\n    $: if (isActive && !$isActive) childContexts.forEach(cc => cc.isActive.set(false))\n\n    /**\n     * @param {RouteFragment[]} fragments\n     */\n    const handlePageChange = fragments => {\n        const [fragment, ...childFragments] = [...fragments]\n        // todo we should match node, not node.id. For some reason node instances are different\n        activeContext = childContexts.find(s => s.node.id === fragment?.node.id)\n        if (!activeContext)\n            throw new Error(`couldn't find context for ${fragment?.node.id}`)\n\n        activeContext.fragment = fragment\n        activeContext.childFragments.set(childFragments)\n        activeContext.route = fragments[0].route\n        // todo issue is caused by routify:meta reset in modules/index.md\n\n        // set this sibling to active and all other to inactive\n        childContexts.forEach(s => s.isActive.set(s === activeContext))\n    }\n\n    $: $childFragments.length && handlePageChange($childFragments)\n</script>\n\n{#each childContexts as context (context.node.id)}\n    <RenderFragment {context} {props} {activeContext} />\n{/each}\n","<!-- Looping decorator wrapper. The Parent prop returns a new decorator wrapper with the next decorator -->\n<script>\n    import { onDestroy } from 'svelte'\n    import { addPropsToComp } from '../../common/utils'\n    import DecoratorWrapper from './DecoratorWrapper.svelte'\n\n    export let decorators = null,\n        nested = false,\n        context\n\n    // TODO insert Noop.svelte as first item\n    $: decoClones = [...(decorators || context.decorators)]\n    $: lastDecorator = decoClones.pop()\n\n    $: Parent = addPropsToComp(DecoratorWrapper, {\n        decorators: decoClones,\n        context,\n        nested: true,\n    })\n\n    // we only want to trigger onDestroy from the first decorator wrapper\n    if (!nested) onDestroy(() => context.onDestroy.run())\n</script>\n\n<svelte:component this={lastDecorator} {Parent} {context}>\n    <slot />\n</svelte:component>\n","<script>\n    import Component from './ComposeFragments.svelte'\n    import { setContext } from 'svelte'\n    import DecoratorWrapper from './DecoratorWrapper.svelte'\n    import Noop from '../decorators/Noop.svelte'\n    /** @type {import('./types').RenderContext} */\n    export let context, props, activeContext\n    const { isActive, childFragments, single } = context // grab the stores\n    let NodeComponent =\n        context.node.module?.default || (!context.node.asyncModule && Noop)\n\n    setContext('routify-fragment-context', context)\n\n    const notExcludedCtx = context => !context?.node.meta.multi?.exclude\n    const isPartOfPage = () => !$single && [context, activeContext].every(notExcludedCtx)\n    $: isVisible = $isActive || isPartOfPage()\n\n    $: if (!NodeComponent && isVisible)\n        context.node.getRawComponent().then(r => (NodeComponent = r))\n\n    $: ({ params, load, route } = context.fragment)\n\n    $: compProps = { ...params, ...load?.props, ...props }\n    $: userContext = { ...context, load, route }\n</script>\n\n{#if isVisible && NodeComponent}\n    <!-- DECORATOR COMPONENT\n         we don't need to pass props as we provided them with \"attachProps\" in Component.svelte -->\n    <svelte:component this={DecoratorWrapper} {context}>\n        <!-- PAGE COMPONENT -->\n        <svelte:component\n            this={NodeComponent}\n            {...compProps}\n            context={userContext}\n            let:props\n            let:multi\n            let:decorator>\n            {#if $childFragments.length || (multi && !multi?.single)}\n                <!-- CHILD PAGES -->\n                <Component options={{ multi, decorator, props }} {context} />\n            {/if}\n        </svelte:component>\n    </svelte:component>\n{/if}\n","<script>\n  import { Router } from \"@roxi/routify\";\n  import routes from \"../.routify/routes.default\";\n</script>\n\n<a href=\"/\">home</a> |\n<a href=\"/more\">more</a> |\n<a href=\"./stuff\">stuff</a>\n\n<Router {routes} />\n","import { makeApplyHmr } from 'svelte-hmr/runtime';\r\n\r\n// eslint-disable-next-line no-undef\r\nconst g = typeof window !== 'undefined' ? window : global;\r\n\r\nconst globalKey =\r\n\ttypeof Symbol !== 'undefined'\r\n\t\t? Symbol('SVELTE_LOADER_HOT')\r\n\t\t: '__SVELTE_LOADER_HOT';\r\n\r\nif (!g[globalKey]) {\r\n\t// do updating refs counting to know when a full update has been applied\r\n\tlet updatingCount = 0;\r\n\r\n\tconst notifyStart = () => {\r\n\t\tupdatingCount++;\r\n\t};\r\n\r\n\tconst notifyError = reload => err => {\r\n\t\tconst errString = (err && err.stack) || err;\r\n\t\t// eslint-disable-next-line no-console\r\n\t\tconsole.error(\r\n\t\t\t'[HMR] Failed to accept update (nollup compat mode)',\r\n\t\t\terrString\r\n\t\t);\r\n\t\treload();\r\n\t\tnotifyEnd();\r\n\t};\r\n\r\n\tconst notifyEnd = () => {\r\n\t\tupdatingCount--;\r\n\t\tif (updatingCount === 0) {\r\n\t\t\t// NOTE this message is important for timing in tests\r\n\t\t\t// eslint-disable-next-line no-console\r\n\t\t\tconsole.log('[HMR:Svelte] Up to date');\r\n\t\t}\r\n\t};\r\n\r\n\tg[globalKey] = {\r\n\t\thotStates: {},\r\n\t\tnotifyStart,\r\n\t\tnotifyError,\r\n\t\tnotifyEnd,\r\n\t};\r\n}\r\n\r\nconst runAcceptHandlers = acceptHandlers => {\r\n\tconst queue = [...acceptHandlers];\r\n\tconst next = () => {\r\n\t\tconst cur = queue.shift();\r\n\t\tif (cur) {\r\n\t\t\treturn cur(null).then(next);\r\n\t\t} else {\r\n\t\t\treturn Promise.resolve(null);\r\n\t\t}\r\n\t};\r\n\treturn next();\r\n};\r\n\r\nexport const applyHmr = makeApplyHmr(args => {\r\n\tconst { notifyStart, notifyError, notifyEnd } = g[globalKey];\r\n\tconst { m, reload } = args;\r\n\r\n\tlet acceptHandlers = (m.hot.data && m.hot.data.acceptHandlers) || [];\r\n\tlet nextAcceptHandlers = [];\r\n\r\n\tm.hot.dispose(data => {\r\n\t\tdata.acceptHandlers = nextAcceptHandlers;\r\n\t});\r\n\r\n\tconst dispose = (...args) => m.hot.dispose(...args);\r\n\r\n\tconst accept = handler => {\r\n\t\tif (nextAcceptHandlers.length === 0) {\r\n\t\t\tm.hot.accept();\r\n\t\t}\r\n\t\tnextAcceptHandlers.push(handler);\r\n\t};\r\n\r\n\tconst check = status => {\r\n\t\tif (status === 'ready') {\r\n\t\t\tnotifyStart();\r\n\t\t} else if (status === 'idle') {\r\n\t\t\trunAcceptHandlers(acceptHandlers)\r\n\t\t\t\t.then(notifyEnd)\r\n\t\t\t\t.catch(notifyError(reload));\r\n\t\t}\r\n\t};\r\n\r\n\tm.hot.addStatusHandler(check);\r\n\r\n\tm.hot.dispose(() => {\r\n\t\tm.hot.removeStatusHandler(check);\r\n\t});\r\n\r\n\tconst hot = {\r\n\t\tdata: m.hot.data,\r\n\t\tdispose,\r\n\t\taccept,\r\n\t};\r\n\r\n\treturn { ...args, hot };\r\n});\r\n","export { SvelteComponentDev as SvelteComponent, SvelteComponentTyped, afterUpdate, beforeUpdate, createEventDispatcher, getAllContexts, getContext, hasContext, onDestroy, onMount, setContext, tick } from './internal/index.mjs';\n","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes, is_svg) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration(undefined, is_svg);\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes, is_svg);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, cancelable, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(is_svg = false) {\n        this.is_svg = false;\n        this.is_svg = is_svg;\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            if (this.is_svg)\n                this.e = svg_element(target.nodeName);\n            else\n                this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes, is_svg = false) {\n        super(is_svg);\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail, { cancelable = false } = {}) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail, { cancelable });\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n            return !event.defaultPrevented;\n        }\n        return true;\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n    return context;\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n    else if (callback) {\n        callback();\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst void_element_names = /^(?:area|base|br|col|command|embed|hr|img|input|keygen|link|meta|param|source|track|wbr)$/;\nfunction is_void(name) {\n    return void_element_names.test(name) || name.toLowerCase() === '!doctype';\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst ATTR_REGEX = /[&\"]/g;\nconst CONTENT_REGEX = /[&<]/g;\n/**\n * Note: this method is performance sensitive and has been optimized\n * https://github.com/sveltejs/svelte/pull/5701\n */\nfunction escape(value, is_attr = false) {\n    const str = String(value);\n    const pattern = is_attr ? ATTR_REGEX : CONTENT_REGEX;\n    pattern.lastIndex = 0;\n    let escaped = '';\n    let last = 0;\n    while (pattern.test(str)) {\n        const i = pattern.lastIndex - 1;\n        const ch = str[i];\n        escaped += str.substring(last, i) + (ch === '&' ? '&amp;' : (ch === '\"' ? '&quot;' : '&lt;'));\n        last = i + 1;\n    }\n    return escaped + str.substring(last);\n}\nfunction escape_attribute_value(value) {\n    // keep booleans, null, and undefined for the sake of `spread`\n    const should_escape = typeof value === 'string' || (value && typeof value === 'object');\n    return should_escape ? escape(value, true) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape(value, true)}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.49.0' }, detail), { bubbles: true }));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    const is_string = typeof tag === 'string';\n    if (tag && !is_string) {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\nfunction validate_void_dynamic_element(tag) {\n    if (tag && is_void(tag)) {\n        throw new Error(`<svelte:element this=\"${tag}\"> is self-closing and cannot have content.`);\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, is_void, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, validate_void_dynamic_element, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import App from \"./App.svelte\";\n\nexport const loadApp = (el) => {\n  new App({\n    target: el,\n  })\n}\n\nif (LOAD_TYPE === 'local') {\n  loadApp(document.getElementById(\"app\"))\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\tif (cachedModule.error !== undefined) throw cachedModule.error;\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\ttry {\n\t\tvar execOptions = { id: moduleId, module: module, factory: __webpack_modules__[moduleId], require: __webpack_require__ };\n\t\t__webpack_require__.i.forEach(function(handler) { handler(execOptions); });\n\t\tmodule = execOptions.module;\n\t\texecOptions.factory.call(module.exports, module, module.exports, execOptions.require);\n\t} catch(e) {\n\t\tmodule.error = e;\n\t\tthrow e;\n\t}\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// expose the module cache\n__webpack_require__.c = __webpack_module_cache__;\n\n// expose the module execution interceptor\n__webpack_require__.i = [];\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + chunkId + \".js\";\n};","// This function allow to reference all chunks\n__webpack_require__.hu = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".\" + __webpack_require__.h() + \".hot-update.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.hmrF = () => (\"bundle_build.\" + __webpack_require__.h() + \".hot-update.json\");","__webpack_require__.h = () => (\"5da1becb282261499764\")","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"wp5-starter-svelte:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\t;\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var currentModuleData = {};\nvar installedModules = __webpack_require__.c;\n\n// module and require creation\nvar currentChildModule;\nvar currentParents = [];\n\n// status\nvar registeredStatusHandlers = [];\nvar currentStatus = \"idle\";\n\n// while downloading\nvar blockingPromises = 0;\nvar blockingPromisesWaiting = [];\n\n// The update info\nvar currentUpdateApplyHandlers;\nvar queuedInvalidatedModules;\n\n// eslint-disable-next-line no-unused-vars\n__webpack_require__.hmrD = currentModuleData;\n\n__webpack_require__.i.push(function (options) {\n\tvar module = options.module;\n\tvar require = createRequire(options.require, options.id);\n\tmodule.hot = createModuleHotObject(options.id, module);\n\tmodule.parents = currentParents;\n\tmodule.children = [];\n\tcurrentParents = [];\n\toptions.require = require;\n});\n\n__webpack_require__.hmrC = {};\n__webpack_require__.hmrI = {};\n\nfunction createRequire(require, moduleId) {\n\tvar me = installedModules[moduleId];\n\tif (!me) return require;\n\tvar fn = function (request) {\n\t\tif (me.hot.active) {\n\t\t\tif (installedModules[request]) {\n\t\t\t\tvar parents = installedModules[request].parents;\n\t\t\t\tif (parents.indexOf(moduleId) === -1) {\n\t\t\t\t\tparents.push(moduleId);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcurrentParents = [moduleId];\n\t\t\t\tcurrentChildModule = request;\n\t\t\t}\n\t\t\tif (me.children.indexOf(request) === -1) {\n\t\t\t\tme.children.push(request);\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.warn(\n\t\t\t\t\"[HMR] unexpected require(\" +\n\t\t\t\t\trequest +\n\t\t\t\t\t\") from disposed module \" +\n\t\t\t\t\tmoduleId\n\t\t\t);\n\t\t\tcurrentParents = [];\n\t\t}\n\t\treturn require(request);\n\t};\n\tvar createPropertyDescriptor = function (name) {\n\t\treturn {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn require[name];\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\trequire[name] = value;\n\t\t\t}\n\t\t};\n\t};\n\tfor (var name in require) {\n\t\tif (Object.prototype.hasOwnProperty.call(require, name) && name !== \"e\") {\n\t\t\tObject.defineProperty(fn, name, createPropertyDescriptor(name));\n\t\t}\n\t}\n\tfn.e = function (chunkId) {\n\t\treturn trackBlockingPromise(require.e(chunkId));\n\t};\n\treturn fn;\n}\n\nfunction createModuleHotObject(moduleId, me) {\n\tvar _main = currentChildModule !== moduleId;\n\tvar hot = {\n\t\t// private stuff\n\t\t_acceptedDependencies: {},\n\t\t_acceptedErrorHandlers: {},\n\t\t_declinedDependencies: {},\n\t\t_selfAccepted: false,\n\t\t_selfDeclined: false,\n\t\t_selfInvalidated: false,\n\t\t_disposeHandlers: [],\n\t\t_main: _main,\n\t\t_requireSelf: function () {\n\t\t\tcurrentParents = me.parents.slice();\n\t\t\tcurrentChildModule = _main ? undefined : moduleId;\n\t\t\t__webpack_require__(moduleId);\n\t\t},\n\n\t\t// Module API\n\t\tactive: true,\n\t\taccept: function (dep, callback, errorHandler) {\n\t\t\tif (dep === undefined) hot._selfAccepted = true;\n\t\t\telse if (typeof dep === \"function\") hot._selfAccepted = dep;\n\t\t\telse if (typeof dep === \"object\" && dep !== null) {\n\t\t\t\tfor (var i = 0; i < dep.length; i++) {\n\t\t\t\t\thot._acceptedDependencies[dep[i]] = callback || function () {};\n\t\t\t\t\thot._acceptedErrorHandlers[dep[i]] = errorHandler;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\thot._acceptedDependencies[dep] = callback || function () {};\n\t\t\t\thot._acceptedErrorHandlers[dep] = errorHandler;\n\t\t\t}\n\t\t},\n\t\tdecline: function (dep) {\n\t\t\tif (dep === undefined) hot._selfDeclined = true;\n\t\t\telse if (typeof dep === \"object\" && dep !== null)\n\t\t\t\tfor (var i = 0; i < dep.length; i++)\n\t\t\t\t\thot._declinedDependencies[dep[i]] = true;\n\t\t\telse hot._declinedDependencies[dep] = true;\n\t\t},\n\t\tdispose: function (callback) {\n\t\t\thot._disposeHandlers.push(callback);\n\t\t},\n\t\taddDisposeHandler: function (callback) {\n\t\t\thot._disposeHandlers.push(callback);\n\t\t},\n\t\tremoveDisposeHandler: function (callback) {\n\t\t\tvar idx = hot._disposeHandlers.indexOf(callback);\n\t\t\tif (idx >= 0) hot._disposeHandlers.splice(idx, 1);\n\t\t},\n\t\tinvalidate: function () {\n\t\t\tthis._selfInvalidated = true;\n\t\t\tswitch (currentStatus) {\n\t\t\t\tcase \"idle\":\n\t\t\t\t\tcurrentUpdateApplyHandlers = [];\n\t\t\t\t\tObject.keys(__webpack_require__.hmrI).forEach(function (key) {\n\t\t\t\t\t\t__webpack_require__.hmrI[key](\n\t\t\t\t\t\t\tmoduleId,\n\t\t\t\t\t\t\tcurrentUpdateApplyHandlers\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\tsetStatus(\"ready\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"ready\":\n\t\t\t\t\tObject.keys(__webpack_require__.hmrI).forEach(function (key) {\n\t\t\t\t\t\t__webpack_require__.hmrI[key](\n\t\t\t\t\t\t\tmoduleId,\n\t\t\t\t\t\t\tcurrentUpdateApplyHandlers\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"prepare\":\n\t\t\t\tcase \"check\":\n\t\t\t\tcase \"dispose\":\n\t\t\t\tcase \"apply\":\n\t\t\t\t\t(queuedInvalidatedModules = queuedInvalidatedModules || []).push(\n\t\t\t\t\t\tmoduleId\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// ignore requests in error states\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\t\t// Management API\n\t\tcheck: hotCheck,\n\t\tapply: hotApply,\n\t\tstatus: function (l) {\n\t\t\tif (!l) return currentStatus;\n\t\t\tregisteredStatusHandlers.push(l);\n\t\t},\n\t\taddStatusHandler: function (l) {\n\t\t\tregisteredStatusHandlers.push(l);\n\t\t},\n\t\tremoveStatusHandler: function (l) {\n\t\t\tvar idx = registeredStatusHandlers.indexOf(l);\n\t\t\tif (idx >= 0) registeredStatusHandlers.splice(idx, 1);\n\t\t},\n\n\t\t//inherit from previous dispose call\n\t\tdata: currentModuleData[moduleId]\n\t};\n\tcurrentChildModule = undefined;\n\treturn hot;\n}\n\nfunction setStatus(newStatus) {\n\tcurrentStatus = newStatus;\n\tvar results = [];\n\n\tfor (var i = 0; i < registeredStatusHandlers.length; i++)\n\t\tresults[i] = registeredStatusHandlers[i].call(null, newStatus);\n\n\treturn Promise.all(results);\n}\n\nfunction unblock() {\n\tif (--blockingPromises === 0) {\n\t\tsetStatus(\"ready\").then(function () {\n\t\t\tif (blockingPromises === 0) {\n\t\t\t\tvar list = blockingPromisesWaiting;\n\t\t\t\tblockingPromisesWaiting = [];\n\t\t\t\tfor (var i = 0; i < list.length; i++) {\n\t\t\t\t\tlist[i]();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction trackBlockingPromise(promise) {\n\tswitch (currentStatus) {\n\t\tcase \"ready\":\n\t\t\tsetStatus(\"prepare\");\n\t\t/* fallthrough */\n\t\tcase \"prepare\":\n\t\t\tblockingPromises++;\n\t\t\tpromise.then(unblock, unblock);\n\t\t\treturn promise;\n\t\tdefault:\n\t\t\treturn promise;\n\t}\n}\n\nfunction waitForBlockingPromises(fn) {\n\tif (blockingPromises === 0) return fn();\n\treturn new Promise(function (resolve) {\n\t\tblockingPromisesWaiting.push(function () {\n\t\t\tresolve(fn());\n\t\t});\n\t});\n}\n\nfunction hotCheck(applyOnUpdate) {\n\tif (currentStatus !== \"idle\") {\n\t\tthrow new Error(\"check() is only allowed in idle status\");\n\t}\n\treturn setStatus(\"check\")\n\t\t.then(__webpack_require__.hmrM)\n\t\t.then(function (update) {\n\t\t\tif (!update) {\n\t\t\t\treturn setStatus(applyInvalidatedModules() ? \"ready\" : \"idle\").then(\n\t\t\t\t\tfunction () {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn setStatus(\"prepare\").then(function () {\n\t\t\t\tvar updatedModules = [];\n\t\t\t\tcurrentUpdateApplyHandlers = [];\n\n\t\t\t\treturn Promise.all(\n\t\t\t\t\tObject.keys(__webpack_require__.hmrC).reduce(function (\n\t\t\t\t\t\tpromises,\n\t\t\t\t\t\tkey\n\t\t\t\t\t) {\n\t\t\t\t\t\t__webpack_require__.hmrC[key](\n\t\t\t\t\t\t\tupdate.c,\n\t\t\t\t\t\t\tupdate.r,\n\t\t\t\t\t\t\tupdate.m,\n\t\t\t\t\t\t\tpromises,\n\t\t\t\t\t\t\tcurrentUpdateApplyHandlers,\n\t\t\t\t\t\t\tupdatedModules\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn promises;\n\t\t\t\t\t},\n\t\t\t\t\t[])\n\t\t\t\t).then(function () {\n\t\t\t\t\treturn waitForBlockingPromises(function () {\n\t\t\t\t\t\tif (applyOnUpdate) {\n\t\t\t\t\t\t\treturn internalApply(applyOnUpdate);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn setStatus(\"ready\").then(function () {\n\t\t\t\t\t\t\t\treturn updatedModules;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t});\n}\n\nfunction hotApply(options) {\n\tif (currentStatus !== \"ready\") {\n\t\treturn Promise.resolve().then(function () {\n\t\t\tthrow new Error(\n\t\t\t\t\"apply() is only allowed in ready status (state: \" +\n\t\t\t\t\tcurrentStatus +\n\t\t\t\t\t\")\"\n\t\t\t);\n\t\t});\n\t}\n\treturn internalApply(options);\n}\n\nfunction internalApply(options) {\n\toptions = options || {};\n\n\tapplyInvalidatedModules();\n\n\tvar results = currentUpdateApplyHandlers.map(function (handler) {\n\t\treturn handler(options);\n\t});\n\tcurrentUpdateApplyHandlers = undefined;\n\n\tvar errors = results\n\t\t.map(function (r) {\n\t\t\treturn r.error;\n\t\t})\n\t\t.filter(Boolean);\n\n\tif (errors.length > 0) {\n\t\treturn setStatus(\"abort\").then(function () {\n\t\t\tthrow errors[0];\n\t\t});\n\t}\n\n\t// Now in \"dispose\" phase\n\tvar disposePromise = setStatus(\"dispose\");\n\n\tresults.forEach(function (result) {\n\t\tif (result.dispose) result.dispose();\n\t});\n\n\t// Now in \"apply\" phase\n\tvar applyPromise = setStatus(\"apply\");\n\n\tvar error;\n\tvar reportError = function (err) {\n\t\tif (!error) error = err;\n\t};\n\n\tvar outdatedModules = [];\n\tresults.forEach(function (result) {\n\t\tif (result.apply) {\n\t\t\tvar modules = result.apply(reportError);\n\t\t\tif (modules) {\n\t\t\t\tfor (var i = 0; i < modules.length; i++) {\n\t\t\t\t\toutdatedModules.push(modules[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn Promise.all([disposePromise, applyPromise]).then(function () {\n\t\t// handle errors in accept handlers and self accepted module load\n\t\tif (error) {\n\t\t\treturn setStatus(\"fail\").then(function () {\n\t\t\t\tthrow error;\n\t\t\t});\n\t\t}\n\n\t\tif (queuedInvalidatedModules) {\n\t\t\treturn internalApply(options).then(function (list) {\n\t\t\t\toutdatedModules.forEach(function (moduleId) {\n\t\t\t\t\tif (list.indexOf(moduleId) < 0) list.push(moduleId);\n\t\t\t\t});\n\t\t\t\treturn list;\n\t\t\t});\n\t\t}\n\n\t\treturn setStatus(\"idle\").then(function () {\n\t\t\treturn outdatedModules;\n\t\t});\n\t});\n}\n\nfunction applyInvalidatedModules() {\n\tif (queuedInvalidatedModules) {\n\t\tif (!currentUpdateApplyHandlers) currentUpdateApplyHandlers = [];\n\t\tObject.keys(__webpack_require__.hmrI).forEach(function (key) {\n\t\t\tqueuedInvalidatedModules.forEach(function (moduleId) {\n\t\t\t\t__webpack_require__.hmrI[key](\n\t\t\t\t\tmoduleId,\n\t\t\t\t\tcurrentUpdateApplyHandlers\n\t\t\t\t);\n\t\t\t});\n\t\t});\n\t\tqueuedInvalidatedModules = undefined;\n\t\treturn true;\n\t}\n}","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl + \"../\";","var createStylesheet = (chunkId, fullhref, resolve, reject) => {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tvar onLinkComplete = (event) => {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + realHref + \")\");\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tlinkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\tdocument.head.appendChild(linkTag);\n\treturn linkTag;\n};\nvar findStylesheet = (href, fullhref) => {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = (chunkId) => {\n\treturn new Promise((resolve, reject) => {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, resolve, reject);\n\t});\n}\n// no chunk loading\n\nvar oldTags = [];\nvar newTags = [];\nvar applyHandler = (options) => {\n\treturn { dispose: () => {\n\t\tfor(var i = 0; i < oldTags.length; i++) {\n\t\t\tvar oldTag = oldTags[i];\n\t\t\tif(oldTag.parentNode) oldTag.parentNode.removeChild(oldTag);\n\t\t}\n\t\toldTags.length = 0;\n\t}, apply: () => {\n\t\tfor(var i = 0; i < newTags.length; i++) newTags[i].rel = \"stylesheet\";\n\t\tnewTags.length = 0;\n\t} };\n}\n__webpack_require__.hmrC.miniCss = (chunkIds, removedChunks, removedModules, promises, applyHandlers, updatedModulesList) => {\n\tapplyHandlers.push(applyHandler);\n\tchunkIds.forEach((chunkId) => {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tvar oldTag = findStylesheet(href, fullhref);\n\t\tif(!oldTag) return;\n\t\tpromises.push(new Promise((resolve, reject) => {\n\t\t\tvar tag = createStylesheet(chunkId, fullhref, () => {\n\t\t\t\ttag.as = \"style\";\n\t\t\t\ttag.rel = \"preload\";\n\t\t\t\tresolve();\n\t\t\t}, reject);\n\t\t\toldTags.push(oldTag);\n\t\t\tnewTags.push(tag);\n\t\t}));\n\t});\n}","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = __webpack_require__.hmrS_jsonp = __webpack_require__.hmrS_jsonp || {\n\t\"bundle/build\": 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\nvar currentUpdatedModulesList;\nvar waitingUpdateResolves = {};\nfunction loadUpdateChunk(chunkId, updatedModulesList) {\n\tcurrentUpdatedModulesList = updatedModulesList;\n\treturn new Promise((resolve, reject) => {\n\t\twaitingUpdateResolves[chunkId] = resolve;\n\t\t// start update chunk loading\n\t\tvar url = __webpack_require__.p + __webpack_require__.hu(chunkId);\n\t\t// create error before stack unwound to get useful stacktrace later\n\t\tvar error = new Error();\n\t\tvar loadingEnded = (event) => {\n\t\t\tif(waitingUpdateResolves[chunkId]) {\n\t\t\t\twaitingUpdateResolves[chunkId] = undefined\n\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\terror.message = 'Loading hot update chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\terror.type = errorType;\n\t\t\t\terror.request = realSrc;\n\t\t\t\treject(error);\n\t\t\t}\n\t\t};\n\t\t__webpack_require__.l(url, loadingEnded);\n\t});\n}\n\nself[\"webpackHotUpdatewp5_starter_svelte\"] = (chunkId, moreModules, runtime) => {\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\tcurrentUpdate[moduleId] = moreModules[moduleId];\n\t\t\tif(currentUpdatedModulesList) currentUpdatedModulesList.push(moduleId);\n\t\t}\n\t}\n\tif(runtime) currentUpdateRuntime.push(runtime);\n\tif(waitingUpdateResolves[chunkId]) {\n\t\twaitingUpdateResolves[chunkId]();\n\t\twaitingUpdateResolves[chunkId] = undefined;\n\t}\n};\n\nvar currentUpdateChunks;\nvar currentUpdate;\nvar currentUpdateRemovedChunks;\nvar currentUpdateRuntime;\nfunction applyHandler(options) {\n\tif (__webpack_require__.f) delete __webpack_require__.f.jsonpHmr;\n\tcurrentUpdateChunks = undefined;\n\tfunction getAffectedModuleEffects(updateModuleId) {\n\t\tvar outdatedModules = [updateModuleId];\n\t\tvar outdatedDependencies = {};\n\n\t\tvar queue = outdatedModules.map(function (id) {\n\t\t\treturn {\n\t\t\t\tchain: [id],\n\t\t\t\tid: id\n\t\t\t};\n\t\t});\n\t\twhile (queue.length > 0) {\n\t\t\tvar queueItem = queue.pop();\n\t\t\tvar moduleId = queueItem.id;\n\t\t\tvar chain = queueItem.chain;\n\t\t\tvar module = __webpack_require__.c[moduleId];\n\t\t\tif (\n\t\t\t\t!module ||\n\t\t\t\t(module.hot._selfAccepted && !module.hot._selfInvalidated)\n\t\t\t)\n\t\t\t\tcontinue;\n\t\t\tif (module.hot._selfDeclined) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"self-declined\",\n\t\t\t\t\tchain: chain,\n\t\t\t\t\tmoduleId: moduleId\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (module.hot._main) {\n\t\t\t\treturn {\n\t\t\t\t\ttype: \"unaccepted\",\n\t\t\t\t\tchain: chain,\n\t\t\t\t\tmoduleId: moduleId\n\t\t\t\t};\n\t\t\t}\n\t\t\tfor (var i = 0; i < module.parents.length; i++) {\n\t\t\t\tvar parentId = module.parents[i];\n\t\t\t\tvar parent = __webpack_require__.c[parentId];\n\t\t\t\tif (!parent) continue;\n\t\t\t\tif (parent.hot._declinedDependencies[moduleId]) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttype: \"declined\",\n\t\t\t\t\t\tchain: chain.concat([parentId]),\n\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\tparentId: parentId\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tif (outdatedModules.indexOf(parentId) !== -1) continue;\n\t\t\t\tif (parent.hot._acceptedDependencies[moduleId]) {\n\t\t\t\t\tif (!outdatedDependencies[parentId])\n\t\t\t\t\t\toutdatedDependencies[parentId] = [];\n\t\t\t\t\taddAllToSet(outdatedDependencies[parentId], [moduleId]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tdelete outdatedDependencies[parentId];\n\t\t\t\toutdatedModules.push(parentId);\n\t\t\t\tqueue.push({\n\t\t\t\t\tchain: chain.concat([parentId]),\n\t\t\t\t\tid: parentId\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttype: \"accepted\",\n\t\t\tmoduleId: updateModuleId,\n\t\t\toutdatedModules: outdatedModules,\n\t\t\toutdatedDependencies: outdatedDependencies\n\t\t};\n\t}\n\n\tfunction addAllToSet(a, b) {\n\t\tfor (var i = 0; i < b.length; i++) {\n\t\t\tvar item = b[i];\n\t\t\tif (a.indexOf(item) === -1) a.push(item);\n\t\t}\n\t}\n\n\t// at begin all updates modules are outdated\n\t// the \"outdated\" status can propagate to parents if they don't accept the children\n\tvar outdatedDependencies = {};\n\tvar outdatedModules = [];\n\tvar appliedUpdate = {};\n\n\tvar warnUnexpectedRequire = function warnUnexpectedRequire(module) {\n\t\tconsole.warn(\n\t\t\t\"[HMR] unexpected require(\" + module.id + \") to disposed module\"\n\t\t);\n\t};\n\n\tfor (var moduleId in currentUpdate) {\n\t\tif (__webpack_require__.o(currentUpdate, moduleId)) {\n\t\t\tvar newModuleFactory = currentUpdate[moduleId];\n\t\t\t/** @type {TODO} */\n\t\t\tvar result;\n\t\t\tif (newModuleFactory) {\n\t\t\t\tresult = getAffectedModuleEffects(moduleId);\n\t\t\t} else {\n\t\t\t\tresult = {\n\t\t\t\t\ttype: \"disposed\",\n\t\t\t\t\tmoduleId: moduleId\n\t\t\t\t};\n\t\t\t}\n\t\t\t/** @type {Error|false} */\n\t\t\tvar abortError = false;\n\t\t\tvar doApply = false;\n\t\t\tvar doDispose = false;\n\t\t\tvar chainInfo = \"\";\n\t\t\tif (result.chain) {\n\t\t\t\tchainInfo = \"\\nUpdate propagation: \" + result.chain.join(\" -> \");\n\t\t\t}\n\t\t\tswitch (result.type) {\n\t\t\t\tcase \"self-declined\":\n\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n\t\t\t\t\tif (!options.ignoreDeclined)\n\t\t\t\t\t\tabortError = new Error(\n\t\t\t\t\t\t\t\"Aborted because of self decline: \" +\n\t\t\t\t\t\t\t\tresult.moduleId +\n\t\t\t\t\t\t\t\tchainInfo\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"declined\":\n\t\t\t\t\tif (options.onDeclined) options.onDeclined(result);\n\t\t\t\t\tif (!options.ignoreDeclined)\n\t\t\t\t\t\tabortError = new Error(\n\t\t\t\t\t\t\t\"Aborted because of declined dependency: \" +\n\t\t\t\t\t\t\t\tresult.moduleId +\n\t\t\t\t\t\t\t\t\" in \" +\n\t\t\t\t\t\t\t\tresult.parentId +\n\t\t\t\t\t\t\t\tchainInfo\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"unaccepted\":\n\t\t\t\t\tif (options.onUnaccepted) options.onUnaccepted(result);\n\t\t\t\t\tif (!options.ignoreUnaccepted)\n\t\t\t\t\t\tabortError = new Error(\n\t\t\t\t\t\t\t\"Aborted because \" + moduleId + \" is not accepted\" + chainInfo\n\t\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"accepted\":\n\t\t\t\t\tif (options.onAccepted) options.onAccepted(result);\n\t\t\t\t\tdoApply = true;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"disposed\":\n\t\t\t\t\tif (options.onDisposed) options.onDisposed(result);\n\t\t\t\t\tdoDispose = true;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(\"Unexception type \" + result.type);\n\t\t\t}\n\t\t\tif (abortError) {\n\t\t\t\treturn {\n\t\t\t\t\terror: abortError\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (doApply) {\n\t\t\t\tappliedUpdate[moduleId] = newModuleFactory;\n\t\t\t\taddAllToSet(outdatedModules, result.outdatedModules);\n\t\t\t\tfor (moduleId in result.outdatedDependencies) {\n\t\t\t\t\tif (__webpack_require__.o(result.outdatedDependencies, moduleId)) {\n\t\t\t\t\t\tif (!outdatedDependencies[moduleId])\n\t\t\t\t\t\t\toutdatedDependencies[moduleId] = [];\n\t\t\t\t\t\taddAllToSet(\n\t\t\t\t\t\t\toutdatedDependencies[moduleId],\n\t\t\t\t\t\t\tresult.outdatedDependencies[moduleId]\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (doDispose) {\n\t\t\t\taddAllToSet(outdatedModules, [result.moduleId]);\n\t\t\t\tappliedUpdate[moduleId] = warnUnexpectedRequire;\n\t\t\t}\n\t\t}\n\t}\n\tcurrentUpdate = undefined;\n\n\t// Store self accepted outdated modules to require them later by the module system\n\tvar outdatedSelfAcceptedModules = [];\n\tfor (var j = 0; j < outdatedModules.length; j++) {\n\t\tvar outdatedModuleId = outdatedModules[j];\n\t\tvar module = __webpack_require__.c[outdatedModuleId];\n\t\tif (\n\t\t\tmodule &&\n\t\t\t(module.hot._selfAccepted || module.hot._main) &&\n\t\t\t// removed self-accepted modules should not be required\n\t\t\tappliedUpdate[outdatedModuleId] !== warnUnexpectedRequire &&\n\t\t\t// when called invalidate self-accepting is not possible\n\t\t\t!module.hot._selfInvalidated\n\t\t) {\n\t\t\toutdatedSelfAcceptedModules.push({\n\t\t\t\tmodule: outdatedModuleId,\n\t\t\t\trequire: module.hot._requireSelf,\n\t\t\t\terrorHandler: module.hot._selfAccepted\n\t\t\t});\n\t\t}\n\t}\n\n\tvar moduleOutdatedDependencies;\n\n\treturn {\n\t\tdispose: function () {\n\t\t\tcurrentUpdateRemovedChunks.forEach(function (chunkId) {\n\t\t\t\tdelete installedChunks[chunkId];\n\t\t\t});\n\t\t\tcurrentUpdateRemovedChunks = undefined;\n\n\t\t\tvar idx;\n\t\t\tvar queue = outdatedModules.slice();\n\t\t\twhile (queue.length > 0) {\n\t\t\t\tvar moduleId = queue.pop();\n\t\t\t\tvar module = __webpack_require__.c[moduleId];\n\t\t\t\tif (!module) continue;\n\n\t\t\t\tvar data = {};\n\n\t\t\t\t// Call dispose handlers\n\t\t\t\tvar disposeHandlers = module.hot._disposeHandlers;\n\t\t\t\tfor (j = 0; j < disposeHandlers.length; j++) {\n\t\t\t\t\tdisposeHandlers[j].call(null, data);\n\t\t\t\t}\n\t\t\t\t__webpack_require__.hmrD[moduleId] = data;\n\n\t\t\t\t// disable module (this disables requires from this module)\n\t\t\t\tmodule.hot.active = false;\n\n\t\t\t\t// remove module from cache\n\t\t\t\tdelete __webpack_require__.c[moduleId];\n\n\t\t\t\t// when disposing there is no need to call dispose handler\n\t\t\t\tdelete outdatedDependencies[moduleId];\n\n\t\t\t\t// remove \"parents\" references from all children\n\t\t\t\tfor (j = 0; j < module.children.length; j++) {\n\t\t\t\t\tvar child = __webpack_require__.c[module.children[j]];\n\t\t\t\t\tif (!child) continue;\n\t\t\t\t\tidx = child.parents.indexOf(moduleId);\n\t\t\t\t\tif (idx >= 0) {\n\t\t\t\t\t\tchild.parents.splice(idx, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// remove outdated dependency from module children\n\t\t\tvar dependency;\n\t\t\tfor (var outdatedModuleId in outdatedDependencies) {\n\t\t\t\tif (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {\n\t\t\t\t\tmodule = __webpack_require__.c[outdatedModuleId];\n\t\t\t\t\tif (module) {\n\t\t\t\t\t\tmoduleOutdatedDependencies =\n\t\t\t\t\t\t\toutdatedDependencies[outdatedModuleId];\n\t\t\t\t\t\tfor (j = 0; j < moduleOutdatedDependencies.length; j++) {\n\t\t\t\t\t\t\tdependency = moduleOutdatedDependencies[j];\n\t\t\t\t\t\t\tidx = module.children.indexOf(dependency);\n\t\t\t\t\t\t\tif (idx >= 0) module.children.splice(idx, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tapply: function (reportError) {\n\t\t\t// insert new code\n\t\t\tfor (var updateModuleId in appliedUpdate) {\n\t\t\t\tif (__webpack_require__.o(appliedUpdate, updateModuleId)) {\n\t\t\t\t\t__webpack_require__.m[updateModuleId] = appliedUpdate[updateModuleId];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// run new runtime modules\n\t\t\tfor (var i = 0; i < currentUpdateRuntime.length; i++) {\n\t\t\t\tcurrentUpdateRuntime[i](__webpack_require__);\n\t\t\t}\n\n\t\t\t// call accept handlers\n\t\t\tfor (var outdatedModuleId in outdatedDependencies) {\n\t\t\t\tif (__webpack_require__.o(outdatedDependencies, outdatedModuleId)) {\n\t\t\t\t\tvar module = __webpack_require__.c[outdatedModuleId];\n\t\t\t\t\tif (module) {\n\t\t\t\t\t\tmoduleOutdatedDependencies =\n\t\t\t\t\t\t\toutdatedDependencies[outdatedModuleId];\n\t\t\t\t\t\tvar callbacks = [];\n\t\t\t\t\t\tvar errorHandlers = [];\n\t\t\t\t\t\tvar dependenciesForCallbacks = [];\n\t\t\t\t\t\tfor (var j = 0; j < moduleOutdatedDependencies.length; j++) {\n\t\t\t\t\t\t\tvar dependency = moduleOutdatedDependencies[j];\n\t\t\t\t\t\t\tvar acceptCallback =\n\t\t\t\t\t\t\t\tmodule.hot._acceptedDependencies[dependency];\n\t\t\t\t\t\t\tvar errorHandler =\n\t\t\t\t\t\t\t\tmodule.hot._acceptedErrorHandlers[dependency];\n\t\t\t\t\t\t\tif (acceptCallback) {\n\t\t\t\t\t\t\t\tif (callbacks.indexOf(acceptCallback) !== -1) continue;\n\t\t\t\t\t\t\t\tcallbacks.push(acceptCallback);\n\t\t\t\t\t\t\t\terrorHandlers.push(errorHandler);\n\t\t\t\t\t\t\t\tdependenciesForCallbacks.push(dependency);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (var k = 0; k < callbacks.length; k++) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tcallbacks[k].call(null, moduleOutdatedDependencies);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tif (typeof errorHandlers[k] === \"function\") {\n\t\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\t\terrorHandlers[k](err, {\n\t\t\t\t\t\t\t\t\t\t\tmoduleId: outdatedModuleId,\n\t\t\t\t\t\t\t\t\t\t\tdependencyId: dependenciesForCallbacks[k]\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} catch (err2) {\n\t\t\t\t\t\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\t\t\t\t\t\ttype: \"accept-error-handler-errored\",\n\t\t\t\t\t\t\t\t\t\t\t\tmoduleId: outdatedModuleId,\n\t\t\t\t\t\t\t\t\t\t\t\tdependencyId: dependenciesForCallbacks[k],\n\t\t\t\t\t\t\t\t\t\t\t\terror: err2,\n\t\t\t\t\t\t\t\t\t\t\t\toriginalError: err\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\t\t\t\t\t\treportError(err2);\n\t\t\t\t\t\t\t\t\t\t\treportError(err);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\t\t\t\t\ttype: \"accept-errored\",\n\t\t\t\t\t\t\t\t\t\t\tmoduleId: outdatedModuleId,\n\t\t\t\t\t\t\t\t\t\t\tdependencyId: dependenciesForCallbacks[k],\n\t\t\t\t\t\t\t\t\t\t\terror: err\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\t\t\t\t\treportError(err);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Load self accepted modules\n\t\t\tfor (var o = 0; o < outdatedSelfAcceptedModules.length; o++) {\n\t\t\t\tvar item = outdatedSelfAcceptedModules[o];\n\t\t\t\tvar moduleId = item.module;\n\t\t\t\ttry {\n\t\t\t\t\titem.require(moduleId);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (typeof item.errorHandler === \"function\") {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\titem.errorHandler(err, {\n\t\t\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\t\t\tmodule: __webpack_require__.c[moduleId]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} catch (err2) {\n\t\t\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\t\t\ttype: \"self-accept-error-handler-errored\",\n\t\t\t\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\t\t\t\terror: err2,\n\t\t\t\t\t\t\t\t\toriginalError: err\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\t\t\treportError(err2);\n\t\t\t\t\t\t\t\treportError(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (options.onErrored) {\n\t\t\t\t\t\t\toptions.onErrored({\n\t\t\t\t\t\t\t\ttype: \"self-accept-errored\",\n\t\t\t\t\t\t\t\tmoduleId: moduleId,\n\t\t\t\t\t\t\t\terror: err\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!options.ignoreErrored) {\n\t\t\t\t\t\t\treportError(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn outdatedModules;\n\t\t}\n\t};\n}\n__webpack_require__.hmrI.jsonp = function (moduleId, applyHandlers) {\n\tif (!currentUpdate) {\n\t\tcurrentUpdate = {};\n\t\tcurrentUpdateRuntime = [];\n\t\tcurrentUpdateRemovedChunks = [];\n\t\tapplyHandlers.push(applyHandler);\n\t}\n\tif (!__webpack_require__.o(currentUpdate, moduleId)) {\n\t\tcurrentUpdate[moduleId] = __webpack_require__.m[moduleId];\n\t}\n};\n__webpack_require__.hmrC.jsonp = function (\n\tchunkIds,\n\tremovedChunks,\n\tremovedModules,\n\tpromises,\n\tapplyHandlers,\n\tupdatedModulesList\n) {\n\tapplyHandlers.push(applyHandler);\n\tcurrentUpdateChunks = {};\n\tcurrentUpdateRemovedChunks = removedChunks;\n\tcurrentUpdate = removedModules.reduce(function (obj, key) {\n\t\tobj[key] = false;\n\t\treturn obj;\n\t}, {});\n\tcurrentUpdateRuntime = [];\n\tchunkIds.forEach(function (chunkId) {\n\t\tif (\n\t\t\t__webpack_require__.o(installedChunks, chunkId) &&\n\t\t\tinstalledChunks[chunkId] !== undefined\n\t\t) {\n\t\t\tpromises.push(loadUpdateChunk(chunkId, updatedModulesList));\n\t\t\tcurrentUpdateChunks[chunkId] = true;\n\t\t} else {\n\t\t\tcurrentUpdateChunks[chunkId] = false;\n\t\t}\n\t});\n\tif (__webpack_require__.f) {\n\t\t__webpack_require__.f.jsonpHmr = function (chunkId, promises) {\n\t\t\tif (\n\t\t\t\tcurrentUpdateChunks &&\n\t\t\t\t__webpack_require__.o(currentUpdateChunks, chunkId) &&\n\t\t\t\t!currentUpdateChunks[chunkId]\n\t\t\t) {\n\t\t\t\tpromises.push(loadUpdateChunk(chunkId));\n\t\t\t\tcurrentUpdateChunks[chunkId] = true;\n\t\t\t}\n\t\t};\n\t}\n};\n\n__webpack_require__.hmrM = () => {\n\tif (typeof fetch === \"undefined\") throw new Error(\"No browser support: need fetch API\");\n\treturn fetch(__webpack_require__.p + __webpack_require__.hmrF()).then((response) => {\n\t\tif(response.status === 404) return; // no update available\n\t\tif(!response.ok) throw new Error(\"Failed to fetch update manifest \" + response.statusText);\n\t\treturn response.json();\n\t});\n};\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkwp5_starter_svelte\"] = self[\"webpackChunkwp5_starter_svelte\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// module cache are used so entry inlining is disabled\n// startup\n// Load entry module and return exports\nvar __webpack_exports__ = __webpack_require__(\"./src/main.js\");\n",""],"names":[],"sourceRoot":""}